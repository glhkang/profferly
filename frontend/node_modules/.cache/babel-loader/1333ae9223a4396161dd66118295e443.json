{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { fetchUserPosts, fetchPosts, composePost, removePost } from \"../../actions/post_actions\";\nimport { fetchUsers } from \"../../actions/user_actions\";\nimport { fetchPhotos } from \"../../actions/photo_actions\";\nimport Profile from \"./profile\";\nimport { fetchComment, fetchPostComments, composeComment, removeComment, fetchAllComments } from \"../../actions/comment_actions\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: Object.values(state.posts),\n    currentUser: state.session.user,\n    user: ownProps.match.params.id,\n    users: state.users,\n    newPost: state.posts.new,\n    history: ownProps.history,\n    comments: state.comments.all\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserPosts: id => dispatch(fetchUserPosts(id)),\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: data => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: id => dispatch(removePost(id)),\n    fetchPhotos: () => dispatch(fetchPhotos()),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: comment => dispatch(composeComment(comment)),\n    removeComment: commentId => dispatch(removeComment(commentId)),\n    fetchPostComments: postId => dispatch(fetchPostComments(postId)),\n    fetchComment: commentId => dispatch(fetchComment(commentId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile_container.js"],"names":["connect","fetchUserPosts","fetchPosts","composePost","removePost","fetchUsers","fetchPhotos","Profile","fetchComment","fetchPostComments","composeComment","removeComment","fetchAllComments","mapStateToProps","state","ownProps","posts","Object","values","currentUser","session","user","match","params","id","users","newPost","new","history","comments","all","mapDispatchToProps","dispatch","data","comment","commentId","postId"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,4BALP;AAMA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,gBALF,QAMO,+BANP;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLC,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACE,KAApB,CADF;AAELG,IAAAA,WAAW,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAFtB;AAGLA,IAAAA,IAAI,EAAEN,QAAQ,CAACO,KAAT,CAAeC,MAAf,CAAsBC,EAHvB;AAILC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAJR;AAKLC,IAAAA,OAAO,EAAEZ,KAAK,CAACE,KAAN,CAAYW,GALhB;AAMLC,IAAAA,OAAO,EAAEb,QAAQ,CAACa,OANb;AAOLC,IAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,CAAeC;AAPpB,GAAP;AASD,CAVD;;AAYA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL/B,IAAAA,cAAc,EAAGuB,EAAD,IAAQQ,QAAQ,CAAC/B,cAAc,CAACuB,EAAD,CAAf,CAD3B;AAELtB,IAAAA,UAAU,EAAE,MAAM8B,QAAQ,CAAC9B,UAAU,EAAX,CAFrB;AAGLC,IAAAA,WAAW,EAAG8B,IAAD,IAAUD,QAAQ,CAAC7B,WAAW,CAAC8B,IAAD,CAAZ,CAH1B;AAIL5B,IAAAA,UAAU,EAAE,MAAM2B,QAAQ,CAAC3B,UAAU,EAAX,CAJrB;AAKLD,IAAAA,UAAU,EAAGoB,EAAD,IAAQQ,QAAQ,CAAC5B,UAAU,CAACoB,EAAD,CAAX,CALvB;AAMLlB,IAAAA,WAAW,EAAE,MAAM0B,QAAQ,CAAC1B,WAAW,EAAZ,CANtB;AAOLM,IAAAA,gBAAgB,EAAE,MAAMoB,QAAQ,CAACpB,gBAAgB,EAAjB,CAP3B;AAQLF,IAAAA,cAAc,EAAGwB,OAAD,IAAaF,QAAQ,CAACtB,cAAc,CAACwB,OAAD,CAAf,CARhC;AASLvB,IAAAA,aAAa,EAAGwB,SAAD,IAAeH,QAAQ,CAACrB,aAAa,CAACwB,SAAD,CAAd,CATjC;AAUL1B,IAAAA,iBAAiB,EAAG2B,MAAD,IAAYJ,QAAQ,CAACvB,iBAAiB,CAAC2B,MAAD,CAAlB,CAVlC;AAWL5B,IAAAA,YAAY,EAAG2B,SAAD,IAAeH,QAAQ,CAACxB,YAAY,CAAC2B,SAAD,CAAb;AAXhC,GAAP;AAaD,CAdD;;AAgBA,eAAenC,OAAO,CAACa,eAAD,EAAkBkB,kBAAlB,CAAP,CAA6CxB,OAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport {\n  fetchUserPosts,\n  fetchPosts,\n  composePost,\n  removePost,\n} from \"../../actions/post_actions\";\nimport { fetchUsers } from \"../../actions/user_actions\";\nimport { fetchPhotos } from \"../../actions/photo_actions\";\nimport Profile from \"./profile\";\nimport {\n  fetchComment,\n  fetchPostComments,\n  composeComment,\n  removeComment,\n  fetchAllComments,\n} from \"../../actions/comment_actions\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: Object.values(state.posts),\n    currentUser: state.session.user,\n    user: ownProps.match.params.id,\n    users: state.users,\n    newPost: state.posts.new,\n    history: ownProps.history,\n    comments: state.comments.all,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserPosts: (id) => dispatch(fetchUserPosts(id)),\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: (data) => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: (id) => dispatch(removePost(id)),\n    fetchPhotos: () => dispatch(fetchPhotos()),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: (comment) => dispatch(composeComment(comment)),\n    removeComment: (commentId) => dispatch(removeComment(commentId)),\n    fetchPostComments: (postId) => dispatch(fetchPostComments(postId)),\n    fetchComment: (commentId) => dispatch(fetchComment(commentId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}