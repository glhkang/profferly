{"ast":null,"code":"import{connect}from\"react-redux\";import{fetchPosts as _fetchPosts,composePost as _composePost,removePost as _removePost}from\"../../actions/post_actions\";import{fetchUsers as _fetchUsers}from\"../../actions/user_actions\";import Posts from\"./posts\";import{fetchComment as _fetchComment,fetchPostComments as _fetchPostComments,composeComment as _composeComment,removeComment as _removeComment,fetchAllComments as _fetchAllComments}from\"../../actions/comment_actions\";var mapStateToProps=function mapStateToProps(state,ownProps){return{posts:Object.values(state.posts.all),currentUser:state.session.user,newPost:state.posts.new,users:state.users,history:ownProps.history,comments:state.comments.all//this is for fetchAllComments\n};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchPosts:function fetchPosts(){return dispatch(_fetchPosts());},composePost:function composePost(data){return dispatch(_composePost(data));},fetchUsers:function fetchUsers(){return dispatch(_fetchUsers());},removePost:function removePost(id){return dispatch(_removePost(id));},fetchAllComments:function fetchAllComments(){return dispatch(_fetchAllComments());},composeComment:function composeComment(comment){return dispatch(_composeComment(comment));},removeComment:function removeComment(commentId){return dispatch(_removeComment(commentId));},fetchPostComments:function fetchPostComments(postId){return dispatch(_fetchPostComments(postId));},fetchComment:function fetchComment(commentId){return dispatch(_fetchComment(commentId));}};};export default connect(mapStateToProps,mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts_container.js"],"names":["connect","fetchPosts","composePost","removePost","fetchUsers","Posts","fetchComment","fetchPostComments","composeComment","removeComment","fetchAllComments","mapStateToProps","state","ownProps","posts","Object","values","all","currentUser","session","user","newPost","new","users","history","comments","mapDispatchToProps","dispatch","data","id","comment","commentId","postId"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OACEC,UAAU,GAAVA,CAAAA,WADF,CAEEC,WAAW,GAAXA,CAAAA,YAFF,CAGEC,UAAU,GAAVA,CAAAA,WAHF,KAIO,4BAJP,CAKA,OAASC,UAAU,GAAVA,CAAAA,WAAT,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OACEC,YAAY,GAAZA,CAAAA,aADF,CAEEC,iBAAiB,GAAjBA,CAAAA,kBAFF,CAGEC,cAAc,GAAdA,CAAAA,eAHF,CAIEC,aAAa,GAAbA,CAAAA,cAJF,CAKEC,gBAAgB,GAAhBA,CAAAA,iBALF,KAMO,+BANP,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAO,CACLC,KAAK,CAAEC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACE,KAAN,CAAYG,GAA1B,CADF,CAELC,WAAW,CAAEN,KAAK,CAACO,OAAN,CAAcC,IAFtB,CAGLC,OAAO,CAAET,KAAK,CAACE,KAAN,CAAYQ,GAHhB,CAILC,KAAK,CAAEX,KAAK,CAACW,KAJR,CAKLC,OAAO,CAAEX,QAAQ,CAACW,OALb,CAMLC,QAAQ,CAAEb,KAAK,CAACa,QAAN,CAAeR,GAAK;AANzB,CAAP,CAQD,CATD,CAWA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACL1B,UAAU,CAAE,4BAAM0B,CAAAA,QAAQ,CAAC1B,WAAU,EAAX,CAAd,EADP,CAELC,WAAW,CAAE,qBAAC0B,IAAD,QAAUD,CAAAA,QAAQ,CAACzB,YAAW,CAAC0B,IAAD,CAAZ,CAAlB,EAFR,CAGLxB,UAAU,CAAE,4BAAMuB,CAAAA,QAAQ,CAACvB,WAAU,EAAX,CAAd,EAHP,CAILD,UAAU,CAAE,oBAAC0B,EAAD,QAAQF,CAAAA,QAAQ,CAACxB,WAAU,CAAC0B,EAAD,CAAX,CAAhB,EAJP,CAKLnB,gBAAgB,CAAE,kCAAMiB,CAAAA,QAAQ,CAACjB,iBAAgB,EAAjB,CAAd,EALb,CAMLF,cAAc,CAAE,wBAACsB,OAAD,QAAaH,CAAAA,QAAQ,CAACnB,eAAc,CAACsB,OAAD,CAAf,CAArB,EANX,CAOLrB,aAAa,CAAE,uBAACsB,SAAD,QAAeJ,CAAAA,QAAQ,CAAClB,cAAa,CAACsB,SAAD,CAAd,CAAvB,EAPV,CAQLxB,iBAAiB,CAAE,2BAACyB,MAAD,QAAYL,CAAAA,QAAQ,CAACpB,kBAAiB,CAACyB,MAAD,CAAlB,CAApB,EARd,CASL1B,YAAY,CAAE,sBAACyB,SAAD,QAAeJ,CAAAA,QAAQ,CAACrB,aAAY,CAACyB,SAAD,CAAb,CAAvB,EATT,CAAP,CAWD,CAZD,CAcA,cAAe/B,CAAAA,OAAO,CAACW,eAAD,CAAkBe,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport {\n  fetchPosts,\n  composePost,\n  removePost,\n} from \"../../actions/post_actions\";\nimport { fetchUsers } from \"../../actions/user_actions\";\nimport Posts from \"./posts\";\nimport {\n  fetchComment,\n  fetchPostComments,\n  composeComment,\n  removeComment,\n  fetchAllComments,\n} from \"../../actions/comment_actions\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: Object.values(state.posts.all),\n    currentUser: state.session.user,\n    newPost: state.posts.new,\n    users: state.users,\n    history: ownProps.history,\n    comments: state.comments.all, //this is for fetchAllComments\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: (data) => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: (id) => dispatch(removePost(id)),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: (comment) => dispatch(composeComment(comment)),\n    removeComment: (commentId) => dispatch(removeComment(commentId)),\n    fetchPostComments: (postId) => dispatch(fetchPostComments(postId)),\n    fetchComment: (commentId) => dispatch(fetchComment(commentId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}