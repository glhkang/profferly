{"ast":null,"code":"import { RECEIVE_COMMENT, RECEIVE_NEW_COMMENT, RECEIVE_POST_COMMENTS, DELETE_COMMENT, RECEIVE_COMMENTS } from \"../actions/comment_actions\";\n\nconst CommentsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({\n    all: {}\n  }, state);\n\n  switch (action.type) {\n    case RECEIVE_NEW_COMMENT:\n      newState.all = [...newState.all, action.comment.data];\n      return newState;\n\n    case DELETE_COMMENT:\n      newState.all = newState.all.filter(comment => action.commentId !== comment._id);\n      return newState;\n\n    case RECEIVE_COMMENTS:\n      newState.all = action.comments.data;\n      return newState;\n\n    case RECEIVE_POST_COMMENTS:\n      newState.comments = action.comments.data;\n      return newState;\n\n    case RECEIVE_COMMENT:\n      newState.comment = action.comment.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default CommentsReducer;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/reducers/comments_reducer.js"],"names":["RECEIVE_COMMENT","RECEIVE_NEW_COMMENT","RECEIVE_POST_COMMENTS","DELETE_COMMENT","RECEIVE_COMMENTS","CommentsReducer","state","action","Object","freeze","newState","assign","all","type","comment","data","filter","commentId","_id","comments"],"mappings":"AAAA,SACEA,eADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,gBALF,QAMO,4BANP;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9CC,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd;AACA,MAAII,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd,EAA2BN,KAA3B,CAAf;;AAEA,UAAQC,MAAM,CAACM,IAAf;AACE,SAAKZ,mBAAL;AACES,MAAAA,QAAQ,CAACE,GAAT,GAAe,CAAC,GAAGF,QAAQ,CAACE,GAAb,EAAkBL,MAAM,CAACO,OAAP,CAAeC,IAAjC,CAAf;AACA,aAAOL,QAAP;;AACF,SAAKP,cAAL;AACEO,MAAAA,QAAQ,CAACE,GAAT,GAAeF,QAAQ,CAACE,GAAT,CAAaI,MAAb,CACZF,OAAD,IAAaP,MAAM,CAACU,SAAP,KAAqBH,OAAO,CAACI,GAD7B,CAAf;AAGA,aAAOR,QAAP;;AACF,SAAKN,gBAAL;AACEM,MAAAA,QAAQ,CAACE,GAAT,GAAeL,MAAM,CAACY,QAAP,CAAgBJ,IAA/B;AACA,aAAOL,QAAP;;AAEF,SAAKR,qBAAL;AACEQ,MAAAA,QAAQ,CAACS,QAAT,GAAoBZ,MAAM,CAACY,QAAP,CAAgBJ,IAApC;AACA,aAAOL,QAAP;;AACF,SAAKV,eAAL;AACEU,MAAAA,QAAQ,CAACI,OAAT,GAAmBP,MAAM,CAACO,OAAP,CAAeC,IAAlC;AACA,aAAOL,QAAP;;AACF;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CA1BD;;AA4BA,eAAeD,eAAf","sourcesContent":["import {\n  RECEIVE_COMMENT,\n  RECEIVE_NEW_COMMENT,\n  RECEIVE_POST_COMMENTS,\n  DELETE_COMMENT,\n  RECEIVE_COMMENTS,\n} from \"../actions/comment_actions\";\n\nconst CommentsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({ all: {} }, state);\n\n  switch (action.type) {\n    case RECEIVE_NEW_COMMENT:\n      newState.all = [...newState.all, action.comment.data];\n      return newState;\n    case DELETE_COMMENT:\n      newState.all = newState.all.filter(\n        (comment) => action.commentId !== comment._id\n      );\n      return newState;\n    case RECEIVE_COMMENTS:\n      newState.all = action.comments.data;\n      return newState;\n\n    case RECEIVE_POST_COMMENTS:\n      newState.comments = action.comments.data;\n      return newState;\n    case RECEIVE_COMMENT:\n      newState.comment = action.comment.data;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default CommentsReducer;\n"]},"metadata":{},"sourceType":"module"}