{"ast":null,"code":"import{createComment,getPostComments,getComment,deleteComment,getAllComments}from\"../util/comment_api_util\";export var RECEIVE_COMMENT=\"RECEIVE_COMMENT\";export var RECEIVE_NEW_COMMENT=\"RECEIVE_NEW_COMMENT\";export var RECEIVE_POST_COMMENTS=\"RECEIVE_POST_COMMENTS\";export var DELETE_COMMENT=\"DELETE_COMMENT\";export var RECEIVE_COMMENTS=\"RECEIVE_COMMENTS\";export var receiveAllComments=function receiveAllComments(comments){return{type:RECEIVE_COMMENTS,comments:comments};};var receiveComment=function receiveComment(comment){return{type:RECEIVE_COMMENT,comment:comment};};var receiveNewComment=function receiveNewComment(comment){return{type:RECEIVE_NEW_COMMENT,comment:comment};};var receivePostComments=function receivePostComments(comments){return{type:RECEIVE_POST_COMMENTS,comments:comments};};var destroyComment=function destroyComment(commentId){return{type:DELETE_COMMENT,commentId:commentId};};export var fetchComment=function fetchComment(commentId){return function(dispatch){return getComment(commentId).then(function(comment){return dispatch(receiveComment(comment));}).catch(function(err){return console.log(err);});};};export var fetchAllComments=function fetchAllComments(){return function(dispatch){return getAllComments().then(function(comments){return dispatch(receiveAllComments(comments));}).catch(function(err){return console.log(err);});};};export var composeComment=function composeComment(data){return function(dispatch){return createComment(data).then(function(comment){return dispatch(receiveNewComment(comment));}).catch(function(err){return console.log(err);});};};export var fetchPostComments=function fetchPostComments(postId){return function(dispatch){return getPostComments(postId).then(function(comments){return dispatch(receivePostComments(comments));}).catch(function(err){return console.log(err);});};};export var removeComment=function removeComment(commentId){return function(dispatch){return deleteComment(commentId).then(function(_){return dispatch(destroyComment(commentId));}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/actions/comment_actions.js"],"names":["createComment","getPostComments","getComment","deleteComment","getAllComments","RECEIVE_COMMENT","RECEIVE_NEW_COMMENT","RECEIVE_POST_COMMENTS","DELETE_COMMENT","RECEIVE_COMMENTS","receiveAllComments","comments","type","receiveComment","comment","receiveNewComment","receivePostComments","destroyComment","commentId","fetchComment","dispatch","then","catch","err","console","log","fetchAllComments","composeComment","data","fetchPostComments","postId","removeComment","_"],"mappings":"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","sourcesContent":["import {\n  createComment,\n  getPostComments,\n  getComment,\n  deleteComment,\n  getAllComments,\n} from \"../util/comment_api_util\";\n\nexport const RECEIVE_COMMENT = \"RECEIVE_COMMENT\";\nexport const RECEIVE_NEW_COMMENT = \"RECEIVE_NEW_COMMENT\";\nexport const RECEIVE_POST_COMMENTS = \"RECEIVE_POST_COMMENTS\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\n\nexport const receiveAllComments = (comments) => ({\n  type: RECEIVE_COMMENTS,\n  comments,\n});\n\nconst receiveComment = (comment) => ({\n  type: RECEIVE_COMMENT,\n  comment,\n});\n\nconst receiveNewComment = (comment) => ({\n  type: RECEIVE_NEW_COMMENT,\n  comment,\n});\n\nconst receivePostComments = (comments) => ({\n  type: RECEIVE_POST_COMMENTS,\n  comments,\n});\n\nconst destroyComment = (commentId) => ({\n  type: DELETE_COMMENT,\n  commentId,\n});\n\nexport const fetchComment = (commentId) => (dispatch) => {\n  return getComment(commentId)\n    .then((comment) => dispatch(receiveComment(comment)))\n    .catch((err) => console.log(err));\n};\n\nexport const fetchAllComments = () => (dispatch) => {\n  return getAllComments()\n    .then((comments) => dispatch(receiveAllComments(comments)))\n    .catch((err) => console.log(err));\n};\n\nexport const composeComment = (data) => (dispatch) => {\n  return createComment(data)\n    .then((comment) => dispatch(receiveNewComment(comment)))\n    .catch((err) => console.log(err));\n};\n\nexport const fetchPostComments = (postId) => (dispatch) => {\n  return getPostComments(postId)\n    .then((comments) => dispatch(receivePostComments(comments)))\n    .catch((err) => console.log(err));\n};\n\nexport const removeComment = (commentId) => (dispatch) => {\n  return deleteComment(commentId)\n    .then((_) => dispatch(destroyComment(commentId)))\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}