{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/post_item.js\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport \"./post.css\";\nimport CommentsList from \"../comments/comments_list\";\nimport CommentForm from \"../comments/comment_form\";\nimport LikesDislikes from \"../likesdislikes/likes_dislikes\";\n\nclass PostItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.state = {\n      showComments: false,\n      commentDisplayText: \"Show Comments\"\n    };\n  }\n\n  handleClick() {\n    this.props.history.push(`/users/${this.props.post.user}`);\n  }\n\n  handleButton(e) {\n    e.preventDefault();\n    this.props.removePost(this.props.post._id);\n    this.props.history.go();\n  }\n\n  onClick() {\n    if (this.state.commentDisplayText === \"Show Comments\") {\n      this.setState(prevState => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Hide Comments\"\n      }));\n    } else {\n      this.setState(prevState => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Show Comments\"\n      }));\n    }\n  }\n\n  render() {\n    const post = this.props.post;\n    const user = this.props.users[this.props.post.user];\n    const dateStr = post.date.toString();\n\n    if (post.file && user) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"post-item-li\",\n        \"data-aos\": \"zoom-out-right\",\n        \"data-aos-once\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"post-item-image\",\n        src: post.file,\n        alt: \"uploaded by user to accompany post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-posted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Posted by\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"post-item-username\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, user.username)), /*#__PURE__*/React.createElement(Moment, {\n        format: \"MMM DD, YYYY [at] h:mmA\",\n        className: \"post-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, dateStr), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(LikesDislikes, {\n        postId: post._id,\n        userId: user._id,\n        currentUserId: this.props.currentUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }), this.props.currentUser.id === user._id ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"post-item-footer-button\",\n        onClick: this.handleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \"Delete\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(CommentForm, {\n        currentUser: this.props.currentUser,\n        composeComment: this.props.composeComment,\n        currentPost: this.props.currentPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-hide-comments\",\n        onClick: () => this.onClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, this.state.commentDisplayText), this.state.showComments ? /*#__PURE__*/React.createElement(CommentsList, {\n        currentPost: this.props.post,\n        comments: this.props.comments,\n        fetchPostComments: this.props.fetchPostComments,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        isLoggedIn: this.props.isLoggedIn,\n        currentUser: this.props.currentUser,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }) : null));\n    } else if (!post.file && user) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"post-item-li\",\n        \"data-aos\": \"zoom-out-right\",\n        \"data-aos-once\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-posted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Posted by\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"post-item-username\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, user.username)), /*#__PURE__*/React.createElement(Moment, {\n        format: \"MMM DD, YYYY [at] h:mmA\",\n        className: \"post-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, dateStr), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(LikesDislikes, {\n        postId: post._id,\n        userId: user._id,\n        currentUserId: this.props.currentUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }), this.props.currentUser.id === user._id ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"post-item-footer-button\",\n        onClick: this.handleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"Delete\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(CommentForm, {\n        currentUser: this.props.currentUser,\n        composeComment: this.props.composeComment,\n        currentPost: this.props.currentPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-hide-comments\",\n        onClick: () => this.onClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, this.state.commentDisplayText), this.state.showComments ? /*#__PURE__*/React.createElement(CommentsList, {\n        currentPost: this.props.post,\n        comments: this.props.comments,\n        fetchPostComments: this.props.fetchPostComments,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        isLoggedIn: this.props.isLoggedIn,\n        currentUser: this.props.currentUser,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }) : null));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default PostItem;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/post_item.js"],"names":["React","Moment","CommentsList","CommentForm","LikesDislikes","PostItem","Component","constructor","props","handleClick","bind","handleButton","state","showComments","commentDisplayText","history","push","post","user","e","preventDefault","removePost","_id","go","onClick","setState","prevState","render","users","dateStr","date","toString","file","text","username","currentUser","id","composeComment","currentPost","comments","fetchPostComments","fetchComment","removeComment","isLoggedIn","fetchAllComments"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Moment from \"react-moment\";\nimport \"./post.css\";\nimport CommentsList from \"../comments/comments_list\";\nimport CommentForm from \"../comments/comment_form\";\nimport LikesDislikes from \"../likesdislikes/likes_dislikes\";\n\nclass PostItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.state = { showComments: false, commentDisplayText: \"Show Comments\" };\n  }\n\n  handleClick() {\n    this.props.history.push(`/users/${this.props.post.user}`);\n  }\n\n  handleButton(e) {\n    e.preventDefault();\n    this.props.removePost(this.props.post._id);\n    this.props.history.go();\n  }\n\n  onClick() {\n    if (this.state.commentDisplayText === \"Show Comments\") {\n      this.setState((prevState) => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Hide Comments\",\n      }));\n    } else {\n      this.setState((prevState) => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Show Comments\",\n      }));\n    }\n  }\n\n  render() {\n    const post = this.props.post;\n    const user = this.props.users[this.props.post.user];\n    const dateStr = post.date.toString();\n\n    if (post.file && user) {\n      return (\n        <li\n          className=\"post-item-li\"\n          data-aos=\"zoom-out-right\"\n          data-aos-once=\"true\"\n        >\n          <div className=\"post-item\">\n            <div>\n              <img\n                className=\"post-item-image\"\n                src={post.file}\n                alt=\"uploaded by user to accompany post\"\n              />\n            </div>\n            <div className=\"post-item-text\">{post.text}</div>\n            <div className=\"post-item-footer\">\n              {/* <LikesDislikes postId={post._id} userId={user._id} currentUserId={this.props.currentUser.id}/> */}\n              <div className=\"post-item-posted\">\n                Posted by{\" \"}\n                <span className=\"post-item-username\" onClick={this.handleClick}>\n                  {user.username}\n                </span>\n              </div>\n              <Moment format=\"MMM DD, YYYY [at] h:mmA\" className=\"post-date\">\n                {dateStr}\n              </Moment>\n              <br />\n              <LikesDislikes\n                postId={post._id}\n                userId={user._id}\n                currentUserId={this.props.currentUser.id}\n              />\n              {/* <div className=\"post-date\">{localtime}</div> */}\n              {this.props.currentUser.id === user._id ? (\n                <button\n                  className=\"post-item-footer-button\"\n                  onClick={this.handleButton}\n                >\n                  Delete\n                </button>\n              ) : (\n                <div></div>\n              )}\n            </div>\n\n            <CommentForm\n              currentUser={this.props.currentUser}\n              composeComment={this.props.composeComment}\n              currentPost={this.props.currentPost}\n            />\n            <div className=\"show-hide-comments\" onClick={() => this.onClick()}>\n              {this.state.commentDisplayText}\n            </div>\n            {this.state.showComments ? (\n              <CommentsList\n                currentPost={this.props.post}\n                comments={this.props.comments}\n                fetchPostComments={this.props.fetchPostComments}\n                fetchComment={this.props.fetchComment}\n                removeComment={this.props.removeComment}\n                isLoggedIn={this.props.isLoggedIn}\n                currentUser={this.props.currentUser}\n                fetchAllComments={this.props.fetchAllComments}\n              />\n            ) : null }\n          </div>\n        </li>\n      );\n    } else if (!post.file && user) {\n      return (\n        <li\n          className=\"post-item-li\"\n          data-aos=\"zoom-out-right\"\n          data-aos-once=\"true\"\n        >\n          <div className=\"post-item\">\n            <div className=\"post-item-text\">{post.text}</div>\n            <div className=\"post-item-footer\">\n              {/* <LikesDislikes postId={post._id} userId={user._id} currentUserId={this.props.currentUser.id}/> */}\n              <div className=\"post-item-posted\">\n                Posted by{\" \"}\n                <span className=\"post-item-username\" onClick={this.handleClick}>\n                  {user.username}\n                </span>\n              </div>\n              <Moment format=\"MMM DD, YYYY [at] h:mmA\" className=\"post-date\">\n                {dateStr}\n              </Moment>\n              <br />\n              <LikesDislikes\n                postId={post._id}\n                userId={user._id}\n                currentUserId={this.props.currentUser.id}\n              />\n              {/* <div className=\"post-date\">{localtime}</div> */}\n              {this.props.currentUser.id === user._id ? (\n                <button\n                  className=\"post-item-footer-button\"\n                  onClick={this.handleButton}\n                >\n                  Delete\n                </button>\n              ) : (\n                <div></div>\n              )}\n            </div>\n\n            <CommentForm\n              currentUser={this.props.currentUser}\n              composeComment={this.props.composeComment}\n              currentPost={this.props.currentPost}\n            />\n            <div className=\"show-hide-comments\" onClick={() => this.onClick()}>\n              {this.state.commentDisplayText}\n            </div>\n            {this.state.showComments ? (\n              <CommentsList\n                currentPost={this.props.post}\n                comments={this.props.comments}\n                fetchPostComments={this.props.fetchPostComments}\n                fetchComment={this.props.fetchComment}\n                removeComment={this.props.removeComment}\n                isLoggedIn={this.props.isLoggedIn}\n                currentUser={this.props.currentUser}\n                fetchAllComments={this.props.fetchAllComments}\n              />\n            ) : null}\n          </div>\n        </li>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default PostItem;\n"]},"metadata":{},"sourceType":"module"}