{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/likesdislikes/likes_dislikes.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip } from 'antd';\nimport Icon, { DislikeOutlined, LikeOutlined, DislikeTwoTone, LikeTwoTone, LikeFilled, DislikeFilled } from '@ant-design/icons';\nimport Axios from 'axios';\n\nconst LikesDislikes = ({\n  postId,\n  userId,\n  currentUserId\n}) => {\n  const [Likes, setLikes] = useState(0);\n  const [Dislikes, setDislikes] = useState(0);\n  const [LikeAction, setLikeAction] = useState(null);\n  const [DislikeAction, setDislikeAction] = useState(null);\n  const [likeIcon, setLikeIcon] = useState(LikeOutlined);\n  const [dislikeIcon, setDislikeIcon] = useState(DislikeOutlined); // debugger\n\n  let obj = {};\n\n  if (postId) {\n    // obj = { userId: userId, postId: postId }\n    obj = {\n      postId: postId,\n      userId: currentUserId\n    };\n  } // useEffect(() => {\n  //   setCurrentUser(props)\n  // }, [props]);\n  // let currentUser = JSON.parse(localStorage.getItem('userId'));\n\n\n  useEffect(() => {\n    Axios.post('/api/likes/getLikes', obj).then(response => {\n      console.log('getLikes', response.data);\n\n      if (response.data.success) {\n        // debugger\n        // count of likes\n        setLikes(response.data.likes.length); // likeIds = response.data.likes.map(like => like.userId)\n        // if (likeIds.includes(currentUserId)) {\n\n        if (response.data.likes.map(like => like.userId).includes(currentUserId)) {\n          setLikeIcon(LikeTwoTone);\n        } else if (!response.data.likes.map(like => like.userId).includes(currentUserId) && response.data.likes.length > 0) {\n          // } else if (!likeIds.includes(currentUserId) && response.data.likes.length > 0) {\n          setLikeIcon(LikeFilled);\n        }\n      } else {\n        alert('Could not get likes');\n      }\n    });\n    Axios.post('/api/likes/getDislikes', obj).then(response => {\n      // debugger\n      console.log('getDislike', response.data);\n\n      if (response.data.success) {\n        // dislikes count\n        // debugger\n        setDislikes(response.data.dislikes.length); // debugger\n        // const dislikeUserIds = dislikes.map(dislikes => dislikes.userid)\n\n        if (response.data.dislikes.map(dislike => dislike.userId).includes(currentUserId)) {\n          setDislikeIcon(DislikeTwoTone);\n        } else if (!response.data.dislikes.map(dislike => dislike.userId).includes(currentUserId) && response.data.dislikes.length > 0) {\n          setDislikeIcon(DislikeFilled);\n        } // // check if disliked or not\n        // response.data.dislikes.map(dislike => {\n        //   if (dislike.userId === currentUserId) {\n        //     // debugger\n        //     // setDislikeAction('disliked')\n        //     setDislikeIcon(DislikeTwoTone)\n        //   } else if (dislike.userId !== currentUserId) {\n        //     // debugger\n        //     // setDislikeAction('disliked')\n        //     setDislikeIcon(DislikeFilled)\n        //   }\n        // })\n\n      } else {\n        alert('Could not get dislikes');\n      }\n    });\n  }, []);\n  let likeIds = [];\n  let dislikeIds = [];\n  Axios.post('/api/likes/getLikes', obj).then(response => {\n    if (response.data.success) {\n      likeIds = response.data.likes.map(like => like.userId);\n    }\n  });\n  Axios.post('/api/likes/getDislikes', obj).then(response => {\n    if (response.data.success) {\n      dislikeIds = response.data.dislikes.map(dislike => dislike.userId);\n    }\n  });\n\n  const onLike = () => {\n    // debugger\n    if (LikeAction === null && !likeIds.includes(currentUserId) && !dislikeIds.includes(currentUserId)) {\n      Axios.post('/api/likes/upLike', obj).then(response => {\n        // debugger\n        if (response.data.success) {\n          setLikes(Likes + 1);\n          setLikeAction('liked');\n          setLikeIcon(LikeTwoTone);\n        } else {\n          alert(\"Already liked\");\n        }\n      });\n    } else if (LikeAction === null && !likeIds.includes(currentUserId) && dislikeIds.includes(currentUserId)) {\n      Axios.post('/api/likes/upLike', obj).then(response => {\n        // debugger\n        if (response.data.success && dislikeIds.length >= 2) {\n          // debugger\n          setLikes(Likes + 1);\n          setLikeAction('liked');\n          setLikeIcon(LikeTwoTone);\n          setDislikeAction(null);\n          setDislikes(Dislikes - 1);\n          setDislikeIcon(DislikeFilled);\n        } else if (response.data.success && dislikeIds.length === 1) {\n          setLikes(Likes + 1);\n          setLikeAction('liked');\n          setLikeIcon(LikeTwoTone);\n          setDislikeAction(null);\n          setDislikes(Dislikes - 1);\n          setDislikeIcon(DislikeOutlined);\n        } else {\n          alert(\"Already liked\");\n        }\n      });\n    } else {\n      Axios.post(\"/api/likes/unLike\", obj).then(response => {\n        if (response.data.success && likeIds.length === 1) {\n          setLikes(Likes - 1);\n          setLikeAction(null);\n          setLikeIcon(LikeOutlined); // likeIds = likeIds.filter(id => id !== currentUserId);\n        } else if (response.data.success && likeIds.length > 1) {\n          setLikes(Likes - 1);\n          setLikeAction(null);\n          setLikeIcon(LikeFilled);\n        } else {\n          alert(\"Could not unlike\");\n        }\n      });\n    }\n  };\n\n  const onDislike = () => {\n    if (DislikeAction === null && !dislikeIds.includes(currentUserId) && !likeIds.includes(currentUserId)) {\n      Axios.post(\"/api/likes/upDislike\", obj).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes + 1);\n          setDislikeAction(\"disliked\");\n          setDislikeIcon(DislikeTwoTone);\n        } else {\n          alert(\"Could not add dislike\");\n        }\n      });\n    } else if (DislikeAction === null && !dislikeIds.includes(currentUserId) && likeIds.includes(currentUserId)) {\n      Axios.post(\"/api/likes/upDislike\", obj).then(response => {\n        if (response.data.success && likeIds.length >= 2) {\n          setDislikes(Dislikes + 1);\n          setDislikeAction(\"disliked\");\n          setDislikeIcon(DislikeTwoTone);\n          setLikeAction(null);\n          setLikes(Likes - 1);\n          setLikeIcon(LikeFilled);\n        } else if (response.data.success && likeIds.length === 1) {\n          setDislikes(Dislikes + 1);\n          setDislikeAction(\"disliked\");\n          setDislikeIcon(DislikeTwoTone);\n          setLikeAction(null);\n          setLikes(Likes - 1);\n          setLikeIcon(LikeOutlined);\n        } else {\n          alert(\"Could not add dislike\");\n        }\n      });\n    } else {\n      Axios.post('/api/likes/unDislike', obj).then(response => {\n        if (response.data.success && dislikeIds.length === 1) {\n          setDislikes(Dislikes - 1);\n          setDislikeAction(null);\n          setDislikeIcon(DislikeOutlined); // dislikeIds = dislikeIds.filter(id => id !== currentUserId);\n        } else if (response.data.success && dislikeIds.length > 1) {\n          setDislikes(Dislikes - 1);\n          setDislikeAction(null);\n          setDislikeIcon(DislikeFilled);\n        } else {\n          alert('Could not decrease dislike');\n        }\n      });\n    }\n  }; //old way\n  // let likeIcon;\n  // if (LikeAction === 'liked' && userId === currentUserId) {\n  //   likeIcon = LikeTwoTone;\n  // } else if (LikeAction === 'liked' && userId !== currentUserId) {\n  //   likeIcon = LikeFilled;\n  // } else {\n  //   likeIcon = LikeOutlined;\n  // } \n  // let dislikeIcon;\n  // if (DislikeAction === 'disliked' && userId === currentUserId) {\n  //   dislikeIcon = DislikeTwoTone;\n  // } else if (DislikeAction === 'disliked' && userId !== currentUserId) {\n  //   dislikeIcon = DislikeFilled;\n  // } else {\n  //   dislikeIcon = DislikeOutlined;\n  // } \n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-like-dislikes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    key: \"post-like\",\n    className: \"post-like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon // component={LikeAction === 'liked' ? LikeTwoTone : LikeOutlined }\n  , {\n    component: likeIcon,\n    onClick: onLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"5px\",\n      cursor: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, Likes)), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"post-dislike\",\n    className: \"post-dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon // component={DislikeAction === 'disliked' ? DislikeTwoTone : DislikeOutlined }\n  , {\n    component: dislikeIcon,\n    onClick: onDislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"5px\",\n      cursor: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, Dislikes))));\n};\n\nexport default LikesDislikes;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/likesdislikes/likes_dislikes.js"],"names":["React","useEffect","useState","Tooltip","Icon","DislikeOutlined","LikeOutlined","DislikeTwoTone","LikeTwoTone","LikeFilled","DislikeFilled","Axios","LikesDislikes","postId","userId","currentUserId","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","likeIcon","setLikeIcon","dislikeIcon","setDislikeIcon","obj","post","then","response","console","log","data","success","likes","length","map","like","includes","alert","dislikes","dislike","likeIds","dislikeIds","onLike","onDislike","paddingLeft","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Tooltip } from 'antd';\nimport Icon, { DislikeOutlined, LikeOutlined, DislikeTwoTone, LikeTwoTone, LikeFilled, DislikeFilled } from '@ant-design/icons';\nimport Axios from 'axios';\n\nconst LikesDislikes = ({postId, userId, currentUserId}) => {\n  const [Likes, setLikes] = useState(0);\n  const [Dislikes, setDislikes] = useState(0);\n  const [LikeAction, setLikeAction] = useState(null);\n  const [DislikeAction, setDislikeAction] = useState(null);\n  const [likeIcon, setLikeIcon] = useState(LikeOutlined);\n  const [dislikeIcon, setDislikeIcon] = useState(DislikeOutlined);\n  // debugger\n  \n  let obj = {};\n  if (postId) {\n    // obj = { userId: userId, postId: postId }\n    obj = { postId: postId, userId:currentUserId }\n  }\n\n  // useEffect(() => {\n  //   setCurrentUser(props)\n  // }, [props]);\n  // let currentUser = JSON.parse(localStorage.getItem('userId'));\n\n  useEffect(() => {\n    Axios.post('/api/likes/getLikes', obj)\n      .then(response => {\n        console.log('getLikes', response.data)\n        if (response.data.success) {\n          // debugger\n          // count of likes\n          setLikes(response.data.likes.length)\n          // likeIds = response.data.likes.map(like => like.userId)\n          // if (likeIds.includes(currentUserId)) {\n          if (response.data.likes.map(like => like.userId).includes(currentUserId)) {\n            setLikeIcon(LikeTwoTone)\n          } else if (!response.data.likes.map(like => like.userId).includes(currentUserId) && response.data.likes.length > 0) {\n          // } else if (!likeIds.includes(currentUserId) && response.data.likes.length > 0) {\n            setLikeIcon(LikeFilled)\n          }\n        } else {\n          alert('Could not get likes')\n        }\n      })\n\n    Axios.post('/api/likes/getDislikes', obj)\n      .then(response => {\n        // debugger\n        console.log('getDislike', response.data)\n        if (response.data.success) {\n          // dislikes count\n          // debugger\n          setDislikes(response.data.dislikes.length)\n          // debugger\n\n          // const dislikeUserIds = dislikes.map(dislikes => dislikes.userid)\n          if (response.data.dislikes.map(dislike => dislike.userId).includes(currentUserId)) {\n            setDislikeIcon(DislikeTwoTone)\n          } else if (!response.data.dislikes.map(dislike => dislike.userId).includes(currentUserId) && response.data.dislikes.length > 0 ){\n            setDislikeIcon(DislikeFilled)\n          }\n\n          // // check if disliked or not\n          // response.data.dislikes.map(dislike => {\n          //   if (dislike.userId === currentUserId) {\n          //     // debugger\n          //     // setDislikeAction('disliked')\n          //     setDislikeIcon(DislikeTwoTone)\n          //   } else if (dislike.userId !== currentUserId) {\n          //     // debugger\n          //     // setDislikeAction('disliked')\n          //     setDislikeIcon(DislikeFilled)\n          //   }\n          // })\n        } else {\n          alert('Could not get dislikes')\n        }\n      })\n\n  }, [])\n\n  let likeIds = [];\n  let dislikeIds = [];\n  Axios.post('/api/likes/getLikes', obj)\n    .then(response => {\n      if (response.data.success) {\n        likeIds = response.data.likes.map(like => like.userId)\n      }\n    })\n  Axios.post('/api/likes/getDislikes', obj)\n    .then(response => {\n      if (response.data.success) {\n        dislikeIds = response.data.dislikes.map(dislike => dislike.userId)\n      }\n    })\n\n  const onLike = () => {\n      // debugger\n    if (LikeAction === null && !likeIds.includes(currentUserId) && !dislikeIds.includes(currentUserId)) {\n      Axios.post('/api/likes/upLike', obj)\n        .then(response => {\n          // debugger\n          if (response.data.success) {\n            setLikes(Likes + 1)\n            setLikeAction('liked')\n            setLikeIcon(LikeTwoTone)\n          } else {\n            alert(\"Already liked\")\n          }\n        })\n    } else if (LikeAction === null && !likeIds.includes(currentUserId) && dislikeIds.includes(currentUserId)) {\n      Axios.post('/api/likes/upLike', obj)\n        .then(response => {\n          // debugger\n          if (response.data.success && dislikeIds.length >= 2) {\n            // debugger\n            setLikes(Likes + 1)\n            setLikeAction('liked')\n            setLikeIcon(LikeTwoTone)\n            setDislikeAction(null)\n            setDislikes(Dislikes - 1)\n            setDislikeIcon(DislikeFilled)\n          } else if (response.data.success && dislikeIds.length === 1) {\n            setLikes(Likes + 1)\n            setLikeAction('liked')\n            setLikeIcon(LikeTwoTone)\n            setDislikeAction(null)\n            setDislikes(Dislikes - 1)\n            setDislikeIcon(DislikeOutlined)\n          } else {\n            alert(\"Already liked\")\n          }\n        })\n    } else {\n      Axios.post(\"/api/likes/unLike\", obj)\n        .then(response => {\n          if (response.data.success && likeIds.length === 1) {\n            setLikes(Likes - 1);\n            setLikeAction(null);\n            setLikeIcon(LikeOutlined);\n            // likeIds = likeIds.filter(id => id !== currentUserId);\n          } else if (response.data.success && likeIds.length > 1) {\n            setLikes(Likes - 1);\n            setLikeAction(null);\n            setLikeIcon(LikeFilled);\n          } else {\n            alert(\"Could not unlike\");\n          }\n        });\n    }\n  }\n\n  const onDislike = () => {\n\n    if (DislikeAction === null && !dislikeIds.includes(currentUserId) && !likeIds.includes(currentUserId)) {\n\n      Axios.post(\"/api/likes/upDislike\", obj)\n        .then(response => {\n          if (response.data.success) {\n            setDislikes(Dislikes + 1);\n            setDislikeAction(\"disliked\");\n            setDislikeIcon(DislikeTwoTone)\n          } else {\n            alert(\"Could not add dislike\");\n          }\n        })\n    } else if (DislikeAction === null && !dislikeIds.includes(currentUserId) && likeIds.includes(currentUserId)) {\n      Axios.post(\"/api/likes/upDislike\", obj)\n        .then(response => {\n          if (response.data.success && likeIds.length >= 2) {\n            setDislikes(Dislikes + 1);\n            setDislikeAction(\"disliked\");\n            setDislikeIcon(DislikeTwoTone)\n            setLikeAction(null);\n            setLikes(Likes - 1);\n            setLikeIcon(LikeFilled)\n          } else if (response.data.success && likeIds.length === 1) {\n            setDislikes(Dislikes + 1);\n            setDislikeAction(\"disliked\");\n            setDislikeIcon(DislikeTwoTone)\n            setLikeAction(null);\n            setLikes(Likes - 1);\n            setLikeIcon(LikeOutlined)\n\n          } else {\n            alert(\"Could not add dislike\");\n          }\n        })\n    } else {\n      Axios.post('/api/likes/unDislike', obj)\n        .then(response => {\n          if (response.data.success && dislikeIds.length === 1) {\n            setDislikes(Dislikes - 1);\n            setDislikeAction(null);\n            setDislikeIcon(DislikeOutlined)\n            // dislikeIds = dislikeIds.filter(id => id !== currentUserId);\n          } else if (response.data.success && dislikeIds.length > 1){\n            setDislikes(Dislikes - 1);\n            setDislikeAction(null);\n            setDislikeIcon(DislikeFilled)\n          } else {\n            alert('Could not decrease dislike')\n          }\n        })\n    }\n  }\n\n\n//old way\n  // let likeIcon;\n  // if (LikeAction === 'liked' && userId === currentUserId) {\n  //   likeIcon = LikeTwoTone;\n  // } else if (LikeAction === 'liked' && userId !== currentUserId) {\n  //   likeIcon = LikeFilled;\n  // } else {\n  //   likeIcon = LikeOutlined;\n  // } \n\n  // let dislikeIcon;\n  // if (DislikeAction === 'disliked' && userId === currentUserId) {\n  //   dislikeIcon = DislikeTwoTone;\n  // } else if (DislikeAction === 'disliked' && userId !== currentUserId) {\n  //   dislikeIcon = DislikeFilled;\n  // } else {\n  //   dislikeIcon = DislikeOutlined;\n  // } \n\n\n  return (\n    <React.Fragment>\n      <div className=\"post-like-dislikes\">\n        <span key=\"post-like\" className=\"post-like\">\n          <Tooltip>\n            <Icon\n              // component={LikeAction === 'liked' ? LikeTwoTone : LikeOutlined }\n              component={likeIcon}\n              onClick={onLike}\n            />\n          </Tooltip>\n          <span style={{ paddingLeft: \"5px\", cursor: \"auto\" }}>{Likes}\n          </span>\n        </span>\n        <span key=\"post-dislike\" className=\"post-dislike\">\n          <Tooltip>\n            <Icon\n              // component={DislikeAction === 'disliked' ? DislikeTwoTone : DislikeOutlined }\n              component={dislikeIcon}\n              onClick={onDislike}\n            />\n          </Tooltip>\n          <span style={{ paddingLeft: \"5px\", cursor: \"auto\" }}>\n            {Dislikes}\n          </span>\n        </span>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LikesDislikes;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}