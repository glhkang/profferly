{"ast":null,"code":"import { connect } from 'react-redux';\nimport { fetchPosts, composePost, removePost } from '../../actions/post_actions';\nimport { fetchUsers } from '../../actions/user_actions';\nimport Posts from './posts';\nimport { fetchComment, fetchPostComments, composeComment, removeComment, fetchAllComments } from '../../actions/comment_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  // debugger\n  return {\n    posts: Object.values(state.posts.all),\n    currentUser: state.session.user,\n    newPost: state.posts.new,\n    users: state.users,\n    history: ownProps.history,\n    comments: state.comments.all //this is for fetchAllComments\n    // comments: state.comments.comments, //this is for fetchPostComments\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //debugger\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: data => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: id => dispatch(removePost(id)),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: comment => dispatch(composeComment(comment)),\n    removeComment: commentId => dispatch(removeComment(commentId)),\n    fetchPostComments: postId => dispatch(fetchPostComments(postId)),\n    fetchComment: commentId => dispatch(fetchComment(commentId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts_container.js"],"names":["connect","fetchPosts","composePost","removePost","fetchUsers","Posts","fetchComment","fetchPostComments","composeComment","removeComment","fetchAllComments","mapStateToProps","state","ownProps","posts","Object","values","all","currentUser","session","user","newPost","new","users","history","comments","mapDispatchToProps","dispatch","data","id","comment","commentId","postId"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,4BAApD;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,cAA1C,EAA0DC,aAA1D,EAAyEC,gBAAzE,QAAiG,+BAAjG;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7C;AAEI,SAAO;AACHC,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACE,KAAN,CAAYG,GAA1B,CADJ;AAEHC,IAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAFxB;AAGHC,IAAAA,OAAO,EAAET,KAAK,CAACE,KAAN,CAAYQ,GAHlB;AAIHC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAJV;AAKHC,IAAAA,OAAO,EAAEX,QAAQ,CAACW,OALf;AAMHC,IAAAA,QAAQ,EAAEb,KAAK,CAACa,QAAN,CAAeR,GANtB,CAM2B;AAC9B;;AAPG,GAAP;AASH,CAZD;;AAcA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACvC;AACI,SAAO;AACH1B,IAAAA,UAAU,EAAE,MAAM0B,QAAQ,CAAC1B,UAAU,EAAX,CADvB;AAEHC,IAAAA,WAAW,EAAE0B,IAAI,IAAID,QAAQ,CAACzB,WAAW,CAAC0B,IAAD,CAAZ,CAF1B;AAGHxB,IAAAA,UAAU,EAAE,MAAMuB,QAAQ,CAACvB,UAAU,EAAX,CAHvB;AAIHD,IAAAA,UAAU,EAAE0B,EAAE,IAAIF,QAAQ,CAACxB,UAAU,CAAC0B,EAAD,CAAX,CAJvB;AAMHnB,IAAAA,gBAAgB,EAAE,MAAMiB,QAAQ,CAACjB,gBAAgB,EAAjB,CAN7B;AAOHF,IAAAA,cAAc,EAAGsB,OAAD,IAAaH,QAAQ,CAACnB,cAAc,CAACsB,OAAD,CAAf,CAPlC;AAQHrB,IAAAA,aAAa,EAAGsB,SAAD,IAAeJ,QAAQ,CAAClB,aAAa,CAACsB,SAAD,CAAd,CARnC;AASHxB,IAAAA,iBAAiB,EAAGyB,MAAD,IAAYL,QAAQ,CAACpB,iBAAiB,CAACyB,MAAD,CAAlB,CATpC;AAUH1B,IAAAA,YAAY,EAAEyB,SAAS,IAAIJ,QAAQ,CAACrB,YAAY,CAACyB,SAAD,CAAb;AAVhC,GAAP;AAYH,CAdD;;AAgBA,eAAe/B,OAAO,CAACW,eAAD,EAAkBe,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { fetchPosts, composePost, removePost } from '../../actions/post_actions';\nimport { fetchUsers } from '../../actions/user_actions';\nimport Posts from './posts';\n\nimport { fetchComment, fetchPostComments, composeComment, removeComment, fetchAllComments } from '../../actions/comment_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n// debugger\n\n    return {\n        posts: Object.values(state.posts.all),\n        currentUser: state.session.user,\n        newPost: state.posts.new,\n        users: state.users,\n        history: ownProps.history,\n        comments: state.comments.all, //this is for fetchAllComments\n        // comments: state.comments.comments, //this is for fetchPostComments\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n//debugger\n    return {\n        fetchPosts: () => dispatch(fetchPosts()),\n        composePost: data => dispatch(composePost(data)),\n        fetchUsers: () => dispatch(fetchUsers()),\n        removePost: id => dispatch(removePost(id)),\n\n        fetchAllComments: () => dispatch(fetchAllComments()),\n        composeComment: (comment) => dispatch(composeComment(comment)),\n        removeComment: (commentId) => dispatch(removeComment(commentId)),\n        fetchPostComments: (postId) => dispatch(fetchPostComments(postId)),\n        fetchComment: commentId => dispatch(fetchComment(commentId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);"]},"metadata":{},"sourceType":"module"}