{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { fetchPosts, composePost, removePost } from \"../../actions/post_actions\";\nimport { fetchUsers } from \"../../actions/user_actions\";\nimport Posts from \"./posts\";\nimport { fetchComment, fetchPostComments, composeComment, removeComment, fetchAllComments } from \"../../actions/comment_actions\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: Object.values(state.posts.all),\n    currentUser: state.session.user,\n    newPost: state.posts.new,\n    users: state.users,\n    history: ownProps.history,\n    comments: state.comments.all //this is for fetchAllComments\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: data => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: id => dispatch(removePost(id)),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: comment => dispatch(composeComment(comment)),\n    removeComment: commentId => dispatch(removeComment(commentId)),\n    fetchPostComments: postId => dispatch(fetchPostComments(postId)),\n    fetchComment: commentId => dispatch(fetchComment(commentId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts_container.js"],"names":["connect","fetchPosts","composePost","removePost","fetchUsers","Posts","fetchComment","fetchPostComments","composeComment","removeComment","fetchAllComments","mapStateToProps","state","ownProps","posts","Object","values","all","currentUser","session","user","newPost","new","users","history","comments","mapDispatchToProps","dispatch","data","id","comment","commentId","postId"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,UAHF,QAIO,4BAJP;AAKA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,gBALF,QAMO,+BANP;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLC,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACE,KAAN,CAAYG,GAA1B,CADF;AAELC,IAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAFtB;AAGLC,IAAAA,OAAO,EAAET,KAAK,CAACE,KAAN,CAAYQ,GAHhB;AAILC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAJR;AAKLC,IAAAA,OAAO,EAAEX,QAAQ,CAACW,OALb;AAMLC,IAAAA,QAAQ,EAAEb,KAAK,CAACa,QAAN,CAAeR,GANpB,CAMyB;;AANzB,GAAP;AAQD,CATD;;AAWA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL1B,IAAAA,UAAU,EAAE,MAAM0B,QAAQ,CAAC1B,UAAU,EAAX,CADrB;AAELC,IAAAA,WAAW,EAAG0B,IAAD,IAAUD,QAAQ,CAACzB,WAAW,CAAC0B,IAAD,CAAZ,CAF1B;AAGLxB,IAAAA,UAAU,EAAE,MAAMuB,QAAQ,CAACvB,UAAU,EAAX,CAHrB;AAILD,IAAAA,UAAU,EAAG0B,EAAD,IAAQF,QAAQ,CAACxB,UAAU,CAAC0B,EAAD,CAAX,CAJvB;AAKLnB,IAAAA,gBAAgB,EAAE,MAAMiB,QAAQ,CAACjB,gBAAgB,EAAjB,CAL3B;AAMLF,IAAAA,cAAc,EAAGsB,OAAD,IAAaH,QAAQ,CAACnB,cAAc,CAACsB,OAAD,CAAf,CANhC;AAOLrB,IAAAA,aAAa,EAAGsB,SAAD,IAAeJ,QAAQ,CAAClB,aAAa,CAACsB,SAAD,CAAd,CAPjC;AAQLxB,IAAAA,iBAAiB,EAAGyB,MAAD,IAAYL,QAAQ,CAACpB,iBAAiB,CAACyB,MAAD,CAAlB,CARlC;AASL1B,IAAAA,YAAY,EAAGyB,SAAD,IAAeJ,QAAQ,CAACrB,YAAY,CAACyB,SAAD,CAAb;AAThC,GAAP;AAWD,CAZD;;AAcA,eAAe/B,OAAO,CAACW,eAAD,EAAkBe,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport {\n  fetchPosts,\n  composePost,\n  removePost,\n} from \"../../actions/post_actions\";\nimport { fetchUsers } from \"../../actions/user_actions\";\nimport Posts from \"./posts\";\nimport {\n  fetchComment,\n  fetchPostComments,\n  composeComment,\n  removeComment,\n  fetchAllComments,\n} from \"../../actions/comment_actions\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: Object.values(state.posts.all),\n    currentUser: state.session.user,\n    newPost: state.posts.new,\n    users: state.users,\n    history: ownProps.history,\n    comments: state.comments.all, //this is for fetchAllComments\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    composePost: (data) => dispatch(composePost(data)),\n    fetchUsers: () => dispatch(fetchUsers()),\n    removePost: (id) => dispatch(removePost(id)),\n    fetchAllComments: () => dispatch(fetchAllComments()),\n    composeComment: (comment) => dispatch(composeComment(comment)),\n    removeComment: (commentId) => dispatch(removeComment(commentId)),\n    fetchPostComments: (postId) => dispatch(fetchPostComments(postId)),\n    fetchComment: (commentId) => dispatch(fetchComment(commentId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}