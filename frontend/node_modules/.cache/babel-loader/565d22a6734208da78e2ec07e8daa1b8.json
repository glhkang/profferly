{"ast":null,"code":"import { createComment, getPostComments, getComment, deleteComment, getAllComments } from \"../util/comment_api_util\";\nexport const RECEIVE_COMMENT = \"RECEIVE_COMMENT\";\nexport const RECEIVE_NEW_COMMENT = \"RECEIVE_NEW_COMMENT\";\nexport const RECEIVE_POST_COMMENTS = \"RECEIVE_POST_COMMENTS\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\nexport const receiveAllComments = comments => ({\n  type: RECEIVE_COMMENTS,\n  comments\n});\n\nconst receiveComment = comment => ({\n  type: RECEIVE_COMMENT,\n  comment\n});\n\nconst receiveNewComment = comment => ({\n  type: RECEIVE_NEW_COMMENT,\n  comment\n});\n\nconst receivePostComments = comments => ({\n  type: RECEIVE_POST_COMMENTS,\n  comments\n});\n\nconst destroyComment = commentId => ({\n  type: DELETE_COMMENT,\n  commentId\n});\n\nexport const fetchComment = commentId => dispatch => {\n  return getComment(commentId).then(comment => dispatch(receiveComment(comment))).catch(err => console.log(err));\n};\nexport const fetchAllComments = () => dispatch => {\n  return getAllComments().then(comments => dispatch(receiveAllComments(comments))).catch(err => console.log(err));\n};\nexport const composeComment = data => dispatch => {\n  return createComment(data).then(comment => dispatch(receiveNewComment(comment))).catch(err => console.log(err));\n};\nexport const fetchPostComments = postId => dispatch => {\n  return getPostComments(postId).then(comments => dispatch(receivePostComments(comments))).catch(err => console.log(err));\n};\nexport const removeComment = commentId => dispatch => {\n  return deleteComment(commentId).then(_ => dispatch(destroyComment(commentId))).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/actions/comment_actions.js"],"names":["createComment","getPostComments","getComment","deleteComment","getAllComments","RECEIVE_COMMENT","RECEIVE_NEW_COMMENT","RECEIVE_POST_COMMENTS","DELETE_COMMENT","RECEIVE_COMMENTS","receiveAllComments","comments","type","receiveComment","comment","receiveNewComment","receivePostComments","destroyComment","commentId","fetchComment","dispatch","then","catch","err","console","log","fetchAllComments","composeComment","data","fetchPostComments","postId","removeComment","_"],"mappings":"AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,cALF,QAMO,0BANP;AAQA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AAC/CC,EAAAA,IAAI,EAAEH,gBADyC;AAE/CE,EAAAA;AAF+C,CAAf,CAA3B;;AAKP,MAAME,cAAc,GAAIC,OAAD,KAAc;AACnCF,EAAAA,IAAI,EAAEP,eAD6B;AAEnCS,EAAAA;AAFmC,CAAd,CAAvB;;AAKA,MAAMC,iBAAiB,GAAID,OAAD,KAAc;AACtCF,EAAAA,IAAI,EAAEN,mBADgC;AAEtCQ,EAAAA;AAFsC,CAAd,CAA1B;;AAKA,MAAME,mBAAmB,GAAIL,QAAD,KAAe;AACzCC,EAAAA,IAAI,EAAEL,qBADmC;AAEzCI,EAAAA;AAFyC,CAAf,CAA5B;;AAKA,MAAMM,cAAc,GAAIC,SAAD,KAAgB;AACrCN,EAAAA,IAAI,EAAEJ,cAD+B;AAErCU,EAAAA;AAFqC,CAAhB,CAAvB;;AAKA,OAAO,MAAMC,YAAY,GAAID,SAAD,IAAgBE,QAAD,IAAc;AACvD,SAAOlB,UAAU,CAACgB,SAAD,CAAV,CACJG,IADI,CACEP,OAAD,IAAaM,QAAQ,CAACP,cAAc,CAACC,OAAD,CAAf,CADtB,EAEJQ,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,gBAAgB,GAAG,MAAON,QAAD,IAAc;AAClD,SAAOhB,cAAc,GAClBiB,IADI,CACEV,QAAD,IAAcS,QAAQ,CAACV,kBAAkB,CAACC,QAAD,CAAnB,CADvB,EAEJW,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,cAAc,GAAIC,IAAD,IAAWR,QAAD,IAAc;AACpD,SAAOpB,aAAa,CAAC4B,IAAD,CAAb,CACJP,IADI,CACEP,OAAD,IAAaM,QAAQ,CAACL,iBAAiB,CAACD,OAAD,CAAlB,CADtB,EAEJQ,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMM,iBAAiB,GAAIC,MAAD,IAAaV,QAAD,IAAc;AACzD,SAAOnB,eAAe,CAAC6B,MAAD,CAAf,CACJT,IADI,CACEV,QAAD,IAAcS,QAAQ,CAACJ,mBAAmB,CAACL,QAAD,CAApB,CADvB,EAEJW,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,aAAa,GAAIb,SAAD,IAAgBE,QAAD,IAAc;AACxD,SAAOjB,aAAa,CAACe,SAAD,CAAb,CACJG,IADI,CACEW,CAAD,IAAOZ,QAAQ,CAACH,cAAc,CAACC,SAAD,CAAf,CADhB,EAEJI,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CAJM","sourcesContent":["import {\n  createComment,\n  getPostComments,\n  getComment,\n  deleteComment,\n  getAllComments,\n} from \"../util/comment_api_util\";\n\nexport const RECEIVE_COMMENT = \"RECEIVE_COMMENT\";\nexport const RECEIVE_NEW_COMMENT = \"RECEIVE_NEW_COMMENT\";\nexport const RECEIVE_POST_COMMENTS = \"RECEIVE_POST_COMMENTS\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\n\nexport const receiveAllComments = (comments) => ({\n  type: RECEIVE_COMMENTS,\n  comments,\n});\n\nconst receiveComment = (comment) => ({\n  type: RECEIVE_COMMENT,\n  comment,\n});\n\nconst receiveNewComment = (comment) => ({\n  type: RECEIVE_NEW_COMMENT,\n  comment,\n});\n\nconst receivePostComments = (comments) => ({\n  type: RECEIVE_POST_COMMENTS,\n  comments,\n});\n\nconst destroyComment = (commentId) => ({\n  type: DELETE_COMMENT,\n  commentId,\n});\n\nexport const fetchComment = (commentId) => (dispatch) => {\n  return getComment(commentId)\n    .then((comment) => dispatch(receiveComment(comment)))\n    .catch((err) => console.log(err));\n};\n\nexport const fetchAllComments = () => (dispatch) => {\n  return getAllComments()\n    .then((comments) => dispatch(receiveAllComments(comments)))\n    .catch((err) => console.log(err));\n};\n\nexport const composeComment = (data) => (dispatch) => {\n  return createComment(data)\n    .then((comment) => dispatch(receiveNewComment(comment)))\n    .catch((err) => console.log(err));\n};\n\nexport const fetchPostComments = (postId) => (dispatch) => {\n  return getPostComments(postId)\n    .then((comments) => dispatch(receivePostComments(comments)))\n    .catch((err) => console.log(err));\n};\n\nexport const removeComment = (commentId) => (dispatch) => {\n  return deleteComment(commentId)\n    .then((_) => dispatch(destroyComment(commentId)))\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}