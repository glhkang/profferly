{"ast":null,"code":"import { RECEIVE_POSTS, RECEIVE_USER_POSTS, RECEIVE_NEW_POST, DELETE_POST, RECEIVE_POST } from \"../actions/post_actions\";\n\nconst PostsReducer = (state = {\n  all: {},\n  user: {},\n  post: {},\n  new: undefined\n}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case RECEIVE_POSTS:\n      newState.all = action.posts.data;\n      return newState;\n\n    case RECEIVE_POST:\n      newState.post = action.post.data;\n      return newState;\n\n    case RECEIVE_NEW_POST:\n      newState.new = action.post.data;\n      return newState;\n\n    case DELETE_POST:\n      newState = Object.assign({}, state);\n      delete newState.all[action.post.id];\n      return newState;\n\n    case RECEIVE_USER_POSTS:\n      newState.user = action.posts.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default PostsReducer;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/reducers/posts_reducer.js"],"names":["RECEIVE_POSTS","RECEIVE_USER_POSTS","RECEIVE_NEW_POST","DELETE_POST","RECEIVE_POST","PostsReducer","state","all","user","post","new","undefined","action","Object","freeze","newState","assign","type","posts","data","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,yBANP;;AAQA,MAAMC,YAAY,GAAG,CACnBC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE,EAAjB;AAAqBC,EAAAA,IAAI,EAAE,EAA3B;AAA+BC,EAAAA,GAAG,EAAEC;AAApC,CADW,EAEnBC,MAFmB,KAGhB;AACHC,EAAAA,MAAM,CAACC,MAAP,CAAcR,KAAd;AACA,MAAIS,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBV,KAAlB,CAAf;;AACA,UAAQM,MAAM,CAACK,IAAf;AACE,SAAKjB,aAAL;AACEe,MAAAA,QAAQ,CAACR,GAAT,GAAeK,MAAM,CAACM,KAAP,CAAaC,IAA5B;AACA,aAAOJ,QAAP;;AACF,SAAKX,YAAL;AACEW,MAAAA,QAAQ,CAACN,IAAT,GAAgBG,MAAM,CAACH,IAAP,CAAYU,IAA5B;AACA,aAAOJ,QAAP;;AACF,SAAKb,gBAAL;AACEa,MAAAA,QAAQ,CAACL,GAAT,GAAeE,MAAM,CAACH,IAAP,CAAYU,IAA3B;AACA,aAAOJ,QAAP;;AACF,SAAKZ,WAAL;AACEY,MAAAA,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBV,KAAlB,CAAX;AACA,aAAOS,QAAQ,CAACR,GAAT,CAAaK,MAAM,CAACH,IAAP,CAAYW,EAAzB,CAAP;AACA,aAAOL,QAAP;;AACF,SAAKd,kBAAL;AACEc,MAAAA,QAAQ,CAACP,IAAT,GAAgBI,MAAM,CAACM,KAAP,CAAaC,IAA7B;AACA,aAAOJ,QAAP;;AACF;AACE,aAAOT,KAAP;AAlBJ;AAoBD,CA1BD;;AA4BA,eAAeD,YAAf","sourcesContent":["import {\n  RECEIVE_POSTS,\n  RECEIVE_USER_POSTS,\n  RECEIVE_NEW_POST,\n  DELETE_POST,\n  RECEIVE_POST,\n} from \"../actions/post_actions\";\n\nconst PostsReducer = (\n  state = { all: {}, user: {}, post: {}, new: undefined },\n  action\n) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_POSTS:\n      newState.all = action.posts.data;\n      return newState;\n    case RECEIVE_POST:\n      newState.post = action.post.data;\n      return newState;\n    case RECEIVE_NEW_POST:\n      newState.new = action.post.data;\n      return newState;\n    case DELETE_POST:\n      newState = Object.assign({}, state);\n      delete newState.all[action.post.id];\n      return newState;\n    case RECEIVE_USER_POSTS:\n      newState.user = action.posts.data;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default PostsReducer;\n"]},"metadata":{},"sourceType":"module"}