{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/map/map.js\";\nimport React from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport * as MarkerApiUtil from \"../../util/marker_util\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMapClick = (mapProps, map, clickEvent) => {\n      const lat = clickEvent.latLng.lat();\n      const lng = clickEvent.latLng.lng();\n      this.props.history.push({\n        pathname: \"/form\",\n        state: {\n          latitude: lat,\n          longitude: lng\n        }\n      });\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        activeMarkerName: props.name,\n        activeMarkerTitle: props.title,\n        activeMarkerId: props.id,\n        activeMarkerRevision: props.revision,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onRenameClick = () => {\n      const markers = this.state.markers;\n      const marker = markers.find(o => o.id === this.state.activeMarkerId);\n\n      if (marker) {\n        marker.revision++;\n      }\n\n      this.setState({\n        markers\n      }, () => {\n        console.log(\"Markers after update\", this.state.markers);\n      });\n    };\n\n    this.state = {\n      markers: []\n    };\n  }\n\n  componentDidMount() {\n    // LOAD MARKERS -- GET http://api/marker\n    MarkerApiUtil.getMarkers().then(markers => this.setState({\n      markers: Object.values(markers)[0]\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"home-button\",\n      onClick: e => {\n        e.preventDefault();\n        this.props.history.push(\"/posts\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"home-icon\",\n      icon: faHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 4,\n      onClick: this.onMapClick,\n      initialCenter: {\n        lat: 40.7128,\n        lng: -74.006\n      },\n      className: \"google-map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, this.state.markers.map((marker, index // {title: \"\", des: \"\", lat: , lng: }\n    ) =>\n    /*#__PURE__*/\n    React.createElement(Marker, {\n      key: index,\n      title: marker.title,\n      name: marker.description,\n      position: {\n        lat: marker.latitude,\n        lng: marker.longitude\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, this.state.activeMarkerTitle), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, this.state.activeMarkerName)))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`\n})(MapContainer);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/map/map.js"],"names":["React","GoogleApiWrapper","InfoWindow","Map","Marker","MarkerApiUtil","FontAwesomeIcon","faHome","MapContainer","Component","constructor","props","onMapClick","mapProps","map","clickEvent","lat","latLng","lng","history","push","pathname","state","latitude","longitude","onMarkerClick","marker","e","setState","activeMarkerName","name","activeMarkerTitle","title","activeMarkerId","id","activeMarkerRevision","revision","activeMarker","showingInfoWindow","onRenameClick","markers","find","o","console","log","componentDidMount","getMarkers","then","Object","values","render","preventDefault","google","index","description","apiKey","process","env","REACT_APP_GOOGLE_API_KEY"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport * as MarkerApiUtil from \"../../util/marker_util\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: [],\n    };\n  }\n\n  componentDidMount() {\n    // LOAD MARKERS -- GET http://api/marker\n    MarkerApiUtil.getMarkers().then((markers) =>\n      this.setState({ markers: Object.values(markers)[0] })\n    );\n  }\n\n  onMapClick = (mapProps, map, clickEvent) => {\n    const lat = clickEvent.latLng.lat();\n    const lng = clickEvent.latLng.lng();\n\n    this.props.history.push({\n      pathname: \"/form\",\n      state: { latitude: lat, longitude: lng },\n    });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      activeMarkerName: props.name,\n      activeMarkerTitle: props.title,\n      activeMarkerId: props.id,\n      activeMarkerRevision: props.revision,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onRenameClick = () => {\n    const markers = this.state.markers;\n    const marker = markers.find((o) => o.id === this.state.activeMarkerId);\n\n    if (marker) {\n      marker.revision++;\n    }\n\n    this.setState({ markers }, () => {\n      console.log(\"Markers after update\", this.state.markers);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"map-window\">\n        <button\n          className=\"home-button\"\n          onClick={(e) => {\n            e.preventDefault();\n            this.props.history.push(\"/posts\");\n          }}\n        >\n          <FontAwesomeIcon className=\"home-icon\" icon={faHome} />\n        </button>\n\n        <Map\n          google={this.props.google}\n          zoom={4}\n          onClick={this.onMapClick}\n          initialCenter={{ lat: 40.7128, lng: -74.006 }}\n          className=\"google-map\"\n        >\n          {this.state.markers.map((\n            marker,\n            index // {title: \"\", des: \"\", lat: , lng: }\n          ) => (\n            <Marker\n              key={index}\n              title={marker.title}\n              name={marker.description}\n              position={{ lat: marker.latitude, lng: marker.longitude }}\n              onClick={this.onMarkerClick}\n            />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n          >\n            <div>\n              <h1>{this.state.activeMarkerTitle}</h1>\n              <p>{this.state.activeMarkerName}</p>\n            </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`,\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}