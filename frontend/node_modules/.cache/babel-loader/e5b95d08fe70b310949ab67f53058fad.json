{"ast":null,"code":"import { BEGIN_RECEIVE_ROOMS_MESSAGES, FAIL_RECEIVE_ROOMS_MESSAGES, RECEIVE_ROOMS_MESSAGES, NEW_LOCAL_MESSAGE } from \"../actions/message_action\";\n\nconst MessagesReducer = (state = {\n  loadin: true,\n  messages: []\n}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case BEGIN_RECEIVE_ROOMS_MESSAGES:\n      newState.loading = true;\n      newState.messages = [];\n      return newState;\n\n    case FAIL_RECEIVE_ROOMS_MESSAGES:\n      newState.loading = false;\n      return newState;\n\n    case RECEIVE_ROOMS_MESSAGES:\n      newState.loading = false;\n      newState.messages = action.messages.data.sort(dateSort);\n      return newState;\n\n    case NEW_LOCAL_MESSAGE:\n      newState.messages = [...state.messages, action.message].sort(dateSort);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nfunction dateSort(value1, value2) {\n  const date1 = Date.parse(value1);\n  const date2 = Date.parse(value2);\n  return date1 - date2;\n}\n\nexport default MessagesReducer;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/reducers/messages_reducer.js"],"names":["BEGIN_RECEIVE_ROOMS_MESSAGES","FAIL_RECEIVE_ROOMS_MESSAGES","RECEIVE_ROOMS_MESSAGES","NEW_LOCAL_MESSAGE","MessagesReducer","state","loadin","messages","action","Object","freeze","newState","assign","type","loading","data","sort","dateSort","message","value1","value2","date1","Date","parse","date2"],"mappings":"AAAA,SACEA,4BADF,EAEEC,2BAFF,EAGEC,sBAHF,EAIEC,iBAJF,QAKO,2BALP;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AAC1EC,EAAAA,MAAM,CAACC,MAAP,CAAcL,KAAd;AAEA,MAAIM,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAf;;AAEA,UAAQG,MAAM,CAACK,IAAf;AACE,SAAKb,4BAAL;AACEW,MAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAnB;AACAH,MAAAA,QAAQ,CAACJ,QAAT,GAAoB,EAApB;AACA,aAAOI,QAAP;;AAEF,SAAKV,2BAAL;AACEU,MAAAA,QAAQ,CAACG,OAAT,GAAmB,KAAnB;AACA,aAAOH,QAAP;;AAEF,SAAKT,sBAAL;AACES,MAAAA,QAAQ,CAACG,OAAT,GAAmB,KAAnB;AACAH,MAAAA,QAAQ,CAACJ,QAAT,GAAoBC,MAAM,CAACD,QAAP,CAAgBQ,IAAhB,CAAqBC,IAArB,CAA0BC,QAA1B,CAApB;AAEA,aAAON,QAAP;;AAEF,SAAKR,iBAAL;AACEQ,MAAAA,QAAQ,CAACJ,QAAT,GAAoB,CAAC,GAAGF,KAAK,CAACE,QAAV,EAAoBC,MAAM,CAACU,OAA3B,EAAoCF,IAApC,CAAyCC,QAAzC,CAApB;AAEA,aAAON,QAAP;;AACF;AACE,aAAON,KAAP;AArBJ;AAuBD,CA5BD;;AA8BA,SAASY,QAAT,CAAkBE,MAAlB,EAA0BC,MAA1B,EAAkC;AAEhC,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAd;AACA,QAAMK,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAd;AAEA,SAAOC,KAAK,GAAGG,KAAf;AAED;;AAED,eAAepB,eAAf","sourcesContent":["import {\n  BEGIN_RECEIVE_ROOMS_MESSAGES,\n  FAIL_RECEIVE_ROOMS_MESSAGES,\n  RECEIVE_ROOMS_MESSAGES,\n  NEW_LOCAL_MESSAGE,\n} from \"../actions/message_action\";\n\nconst MessagesReducer = (state = { loadin: true, messages: [] }, action) => {\n  Object.freeze(state);\n\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case BEGIN_RECEIVE_ROOMS_MESSAGES:\n      newState.loading = true;\n      newState.messages = [];\n      return newState;\n\n    case FAIL_RECEIVE_ROOMS_MESSAGES:\n      newState.loading = false;\n      return newState;\n\n    case RECEIVE_ROOMS_MESSAGES:\n      newState.loading = false;\n      newState.messages = action.messages.data.sort(dateSort);\n\n      return newState;\n\n    case NEW_LOCAL_MESSAGE:\n      newState.messages = [...state.messages, action.message].sort(dateSort);\n\n      return newState;\n    default:\n      return state;\n  }\n};\n\nfunction dateSort(value1, value2) {\n\n  const date1 = Date.parse(value1);\n  const date2 = Date.parse(value2);\n\n  return date1 - date2;\n\n}\n\nexport default MessagesReducer;\n"]},"metadata":{},"sourceType":"module"}