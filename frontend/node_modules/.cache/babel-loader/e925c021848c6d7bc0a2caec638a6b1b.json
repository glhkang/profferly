{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js\";\nimport React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n    this.renderCurrentUser = this.renderCurrentUser.bind(this);\n  }\n\n  componentWillMount() {\n    //debugger\n    this.props.fetchUserPosts(this.props.user);\n    this.props.fetchUsers();\n    this.props.fetchPhotos();\n  }\n\n  componentWillReceiveProps(newState) {\n    ////debugger\n    this.setState({\n      posts: newState.posts\n    });\n  }\n\n  capitalize(string) {\n    let firstChar = string[0].toUpperCase();\n    let rest = string.slice(1);\n    return firstChar + rest;\n  }\n\n  renderCurrentUser() {\n    ////debugger\n    const list = Object.values(this.props.posts[1]).map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n      key: idx,\n      post: post,\n      users: this.props.users,\n      fetchPosts: this.props.fetchPosts,\n      fetchUsers: this.props.fetchUsers,\n      history: this.props.history,\n      currentUser: this.props.currentUser,\n      removePost: this.props.removePost,\n      fetchPostComments: this.props.fetchPostComments,\n      composeComment: this.props.composeComment,\n      fetchComment: this.props.fetchComment,\n      removeComment: this.props.removeComment,\n      comments: this.props.comments,\n      fetchAllComments: this.props.fetchAllComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })); // if (post.file) {\n    //     const dateStr = post.date.toString();\n    //     return (\n    //         <div className=\"posts\">\n    //             <li className=\"post-item-li\">\n    //                 <div className=\"post-item\" key={post._id}>\n    //                     <img className=\"post-item-image\" src= {post.file} />\n    //                     <div className=\"post-item-text\">\n    //                         {post.text}\n    //                     </div>\n    //                 <div className=\"post-item-footer\">\n    //             <button className=\"post-item-footer-button\" onClick={() => {\n    //                 return(\n    //                 this.props.removePost(post._id)\n    //                 .then(() => this.props.history.go())                        \n    //                 )\n    //             } } \n    //             >Delete</button></div></div>\n    //                 <div className=\"post-item-posted\">\n    //                     Posted by <span className=\"post-item-username\" onClick={this.handleClick}>{this.props.user.username}</span>\n    //                 </div>\n    //                 <Moment format=\"MMM DD, YYYY [at] h:mmA\" className=\"post-date\" >{dateStr}</Moment>\n    //                 <br/>\n    //                 <LikesDislikes postId={post._id} userId={this.props.user._id} currentUserId={this.props.currentUser.id}/>\n    //                 {/* <div className=\"post-date\">{localtime}</div> */}\n    //                 {(this.props.currentUser.id === this.props.user._id) ? \n    //                     <button className=\"post-item-footer-button\" onClick={this.handleButton}>Delete</button> : <div></div>\n    //                 }\n    //             </li>\n    //         </div>\n    //     )\n    // } else if (!post.file) {\n    //     const dateStr = post.date.toString();\n    //     return (\n    //         <div className=\"posts\">\n    //             <li className=\"post-item-li\">\n    //                 <div className=\"post-item\" key={post._id}>\n    //                     <div className=\"post-item-text\">\n    //                         {post.text}\n    //                     </div>\n    //                 <div className=\"post-item-footer\">\n    //             <button className=\"post-item-footer-button\" onClick={() => {\n    //                 return(\n    //                 this.props.removePost(post._id)\n    //                 .then(() => this.props.history.go())                        \n    //                 )\n    //             } } \n    //             >Delete</button></div></div>\n    //             </li>\n    //         </div>\n    //     )\n    // }\n    // });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Hello, \", this.capitalize(this.props.currentUser.username)), /*#__PURE__*/React.createElement(PostCompose, {\n      currentUser: this.props.currentUser,\n      newPost: this.props.newPost,\n      composePost: this.props.composePost,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"profile-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, list));\n  }\n\n  renderAsAnotherUser() {\n    if (this.props.users) {\n      const list = Object.values(this.props.posts[1]).map((post, idx) =>\n      /*#__PURE__*/\n      ////debugger\n      React.createElement(PostItem, {\n        key: idx,\n        post: post,\n        users: this.props.users,\n        fetchPosts: this.props.fetchPosts,\n        fetchUsers: this.props.fetchUsers,\n        history: this.props.history,\n        currentUser: this.props.currentUser,\n        removePost: this.props.removePost,\n        fetchPostComments: this.props.fetchPostComments,\n        composeComment: this.props.composeComment,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        comments: this.props.comments,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"another-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"All of 's Posts\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, list));\n    }\n  } //     if (post.file) {\n  //         return(\n  //             <li className=\"post-item-li\"> \n  //                 <div className=\"post-item\" key={post._id}>\n  //                     <img className=\"post-item-image\" src= {post.file} />\n  //                     <div className=\"post-item-text\">\n  //                         {post.text}\n  //                     </div>\n  //                 </div>\n  //             </li>  \n  //         )\n  //     } else if (!post.file) {\n  //         return(\n  //             <li className=\"post-item-li\"> \n  //                 <div className=\"post-item\" key={post._id}>\n  //                     <div className=\"post-item-text\">\n  //                         {post.text}\n  //                     </div>\n  //                 </div>\n  //             </li>  \n  //         )\n  //     }\n  // });\n\n\n  render() {\n    if (!this.state.user && this.state.posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-top-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, \"Loading...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-top-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"profile-button\",\n        onClick: () => this.props.history.push('/posts'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"font-awesome-back\",\n        icon: faArrowCircleLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 110\n        }\n      })), this.props.currentUser.id === this.props.user ? this.renderCurrentUser() : this.renderAsAnotherUser());\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js"],"names":["React","PostItem","PostCompose","FontAwesomeIcon","faArrowCircleLeft","CommentsList","LikesDislikes","Moment","Profile","Component","constructor","props","state","posts","renderAsAnotherUser","bind","renderCurrentUser","componentWillMount","fetchUserPosts","user","fetchUsers","fetchPhotos","componentWillReceiveProps","newState","setState","capitalize","string","firstChar","toUpperCase","rest","slice","list","Object","values","map","post","idx","users","fetchPosts","history","currentUser","removePost","fetchPostComments","composeComment","fetchComment","removeComment","comments","fetchAllComments","username","newPost","composePost","render","length","push","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: []\n        }\n\n        this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n        this.renderCurrentUser = this.renderCurrentUser.bind(this);\n    }\n\n    componentWillMount() {\n//debugger\n        this.props.fetchUserPosts(this.props.user);\n        this.props.fetchUsers();\n        this.props.fetchPhotos();\n    }\n\n    componentWillReceiveProps(newState) {\n////debugger\n        this.setState({ posts: newState.posts });\n    }\n\n    capitalize(string) {\n        let firstChar = string[0].toUpperCase();\n        let rest = string.slice(1);\n\n        return firstChar + rest;\n    }\n\n    renderCurrentUser() {\n////debugger\n        const list = Object.values(this.props.posts[1]).map((post, idx) => \n            <PostItem\n            key={idx}\n            post={post}\n            users={this.props.users}\n            fetchPosts={this.props.fetchPosts}\n            fetchUsers={this.props.fetchUsers}\n            history={this.props.history}\n            currentUser={this.props.currentUser}\n            removePost={this.props.removePost} \n\n            fetchPostComments={this.props.fetchPostComments}\n            composeComment={this.props.composeComment}\n            fetchComment={this.props.fetchComment}\n            removeComment={this.props.removeComment}\n            comments={this.props.comments}\n            fetchAllComments={this.props.fetchAllComments}\n\n        />\n        );\n            // if (post.file) {\n            //     const dateStr = post.date.toString();\n            //     return (\n            //         <div className=\"posts\">\n            //             <li className=\"post-item-li\">\n            //                 <div className=\"post-item\" key={post._id}>\n            //                     <img className=\"post-item-image\" src= {post.file} />\n            //                     <div className=\"post-item-text\">\n            //                         {post.text}\n            //                     </div>\n            //                 <div className=\"post-item-footer\">\n            //             <button className=\"post-item-footer-button\" onClick={() => {\n            //                 return(\n            //                 this.props.removePost(post._id)\n            //                 .then(() => this.props.history.go())                        \n            //                 )\n            //             } } \n                            \n            //             >Delete</button></div></div>\n            //                 <div className=\"post-item-posted\">\n            //                     Posted by <span className=\"post-item-username\" onClick={this.handleClick}>{this.props.user.username}</span>\n            //                 </div>\n            //                 <Moment format=\"MMM DD, YYYY [at] h:mmA\" className=\"post-date\" >{dateStr}</Moment>\n            //                 <br/>\n            //                 <LikesDislikes postId={post._id} userId={this.props.user._id} currentUserId={this.props.currentUser.id}/>\n            //                 {/* <div className=\"post-date\">{localtime}</div> */}\n            //                 {(this.props.currentUser.id === this.props.user._id) ? \n            //                     <button className=\"post-item-footer-button\" onClick={this.handleButton}>Delete</button> : <div></div>\n            //                 }\n            //             </li>\n            //         </div>\n            //     )\n            // } else if (!post.file) {\n            //     const dateStr = post.date.toString();\n            //     return (\n            //         <div className=\"posts\">\n            //             <li className=\"post-item-li\">\n            //                 <div className=\"post-item\" key={post._id}>\n            //                     <div className=\"post-item-text\">\n            //                         {post.text}\n            //                     </div>\n            //                 <div className=\"post-item-footer\">\n            //             <button className=\"post-item-footer-button\" onClick={() => {\n            //                 return(\n            //                 this.props.removePost(post._id)\n            //                 .then(() => this.props.history.go())                        \n            //                 )\n            //             } } \n                            \n            //             >Delete</button></div></div>\n                    \n            //             </li>\n            //         </div>\n            //     )\n            // }\n        // });\n\n\n        return (\n            <div>\n                <div className=\"user-profile\">\n                <h2>Hello, {this.capitalize(this.props.currentUser.username)}</h2>\n                <PostCompose currentUser={this.props.currentUser} newPost={this.props.newPost} composePost={this.props.composePost} history={this.props.history} />\n                </div>\n                <ul className=\"profile-list\">\n                    {list}\n                </ul>\n            </div>\n        )        \n    }\n\n    renderAsAnotherUser() {\n        if (this.props.users) {\n            const list = Object.values(this.props.posts[1]).map((post, idx) =>\n////debugger\n                <PostItem\n                key={idx}\n                post={post}\n                users={this.props.users}\n                fetchPosts={this.props.fetchPosts}\n                fetchUsers={this.props.fetchUsers}\n                history={this.props.history}\n                currentUser={this.props.currentUser}\n                removePost={this.props.removePost} \n\n                fetchPostComments={this.props.fetchPostComments}\n                composeComment={this.props.composeComment}\n                fetchComment={this.props.fetchComment}\n                removeComment={this.props.removeComment}\n                comments={this.props.comments}\n                fetchAllComments={this.props.fetchAllComments}\n\n                />\n            );\n\n            return (\n                <div className=\"another-class\">\n                    <h2>All of 's Posts</h2>\n                    <ul className=\"posts\">\n                        {list}\n                    </ul>\n                </div>\n            )\n        }\n    }\n    \n            //     if (post.file) {\n            //         return(\n            //             <li className=\"post-item-li\"> \n            //                 <div className=\"post-item\" key={post._id}>\n            //                     <img className=\"post-item-image\" src= {post.file} />\n            //                     <div className=\"post-item-text\">\n            //                         {post.text}\n            //                     </div>\n            //                 </div>\n            //             </li>  \n            //         )\n            //     } else if (!post.file) {\n            //         return(\n            //             <li className=\"post-item-li\"> \n            //                 <div className=\"post-item\" key={post._id}>\n            //                     <div className=\"post-item-text\">\n            //                         {post.text}\n            //                     </div>\n            //                 </div>\n            //             </li>  \n            //         )\n            //     }\n            // });\n\n    render() {\n        if (!this.state.user && (this.state.posts.length === 0)) {\n            return (<div className=\"profile-main\">\n                <div className=\"profile-top-section\"/>\n                <div className=\"profile-loading\">Loading...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"profile-main\">\n                    <div className=\"profile-top-section\"/>\n                    {/* <div className=\"profile-main-body\"> */}\n                        <button className=\"profile-button\" onClick={() => this.props.history.push('/posts')}><FontAwesomeIcon className=\"font-awesome-back\" icon={faArrowCircleLeft} /></button>\n                        {this.props.currentUser.id === this.props.user ? \n                        this.renderCurrentUser() : this.renderAsAnotherUser()}\n                    {/* </div> */}\n                </div>\n            )\n        }\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}