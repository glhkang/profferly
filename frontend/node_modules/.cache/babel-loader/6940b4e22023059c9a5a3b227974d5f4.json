{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js\";\nimport React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { fasFaSpinner } from \"@fortawesome/react-\";\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\nimport Join from '../chat/join';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n    this.renderCurrentUser = this.renderCurrentUser.bind(this);\n  }\n\n  componentWillMount() {\n    //debugger\n    this.props.fetchUserPosts(this.props.user);\n    this.props.fetchUsers();\n    this.props.fetchPhotos();\n  }\n\n  componentWillReceiveProps(newState) {\n    ////debugger\n    this.setState({\n      posts: newState.posts\n    });\n  }\n\n  capitalize(string) {\n    let firstChar = string[0].toUpperCase();\n    let rest = string.slice(1);\n    return firstChar + rest;\n  }\n\n  renderCurrentUser() {\n    ////debugger\n    const list = Object.values(this.props.posts[1]).map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n      key: idx,\n      post: post,\n      users: this.props.users,\n      fetchPosts: this.props.fetchPosts,\n      fetchUsers: this.props.fetchUsers,\n      history: this.props.history,\n      currentUser: this.props.currentUser,\n      removePost: this.props.removePost,\n      fetchPostComments: this.props.fetchPostComments,\n      composeComment: this.props.composeComment,\n      fetchComment: this.props.fetchComment,\n      removeComment: this.props.removeComment,\n      comments: this.props.comments,\n      fetchAllComments: this.props.fetchAllComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Hello, \", this.capitalize(this.props.currentUser.username)), /*#__PURE__*/React.createElement(PostCompose, {\n      currentUser: this.props.currentUser,\n      newPost: this.props.newPost,\n      composePost: this.props.composePost,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"profile-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, list));\n  }\n\n  renderAsAnotherUser() {\n    debugger;\n\n    if (this.props.users) {\n      const list = Object.values(this.props.posts[1]).map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n        key: idx,\n        post: post,\n        users: this.props.users,\n        fetchPosts: this.props.fetchPosts,\n        fetchUsers: this.props.fetchUsers,\n        history: this.props.history,\n        currentUser: this.props.currentUser,\n        removePost: this.props.removePost,\n        fetchPostComments: this.props.fetchPostComments,\n        composeComment: this.props.composeComment,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        comments: this.props.comments,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"another-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \"All of \", this.props.users[this.props.user].username, \"'s Posts\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, list));\n    }\n  }\n\n  render() {\n    if (!this.state.user && this.state.posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"loading-icon\",\n        icon: fasFaSpinner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"profile-button\",\n        onClick: () => this.props.history.push('/posts'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"font-awesome-back\",\n        icon: faArrowCircleLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 110\n        }\n      })), this.props.currentUser.id === this.props.user ? this.renderCurrentUser() : this.renderAsAnotherUser(), /*#__PURE__*/React.createElement(Join, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js"],"names":["React","PostItem","PostCompose","FontAwesomeIcon","faArrowCircleLeft","fasFaSpinner","CommentsList","LikesDislikes","Moment","Join","Profile","Component","constructor","props","state","posts","renderAsAnotherUser","bind","renderCurrentUser","componentWillMount","fetchUserPosts","user","fetchUsers","fetchPhotos","componentWillReceiveProps","newState","setState","capitalize","string","firstChar","toUpperCase","rest","slice","list","Object","values","map","post","idx","users","fetchPosts","history","currentUser","removePost","fetchPostComments","composeComment","fetchComment","removeComment","comments","fetchAllComments","username","newPost","composePost","render","length","push","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { fasFaSpinner } from \"@fortawesome/react-\"\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\nimport Join from '../chat/join';\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: []\n        }\n\n        this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n        this.renderCurrentUser = this.renderCurrentUser.bind(this);\n    }\n\n    componentWillMount() {\n//debugger\n        this.props.fetchUserPosts(this.props.user);\n        this.props.fetchUsers();\n        this.props.fetchPhotos();\n    }\n\n    componentWillReceiveProps(newState) {\n////debugger\n        this.setState({ posts: newState.posts });\n    }\n\n    capitalize(string) {\n        let firstChar = string[0].toUpperCase();\n        let rest = string.slice(1);\n\n        return firstChar + rest;\n    }\n\n    renderCurrentUser() {\n////debugger\n        const list = Object.values(this.props.posts[1]).map((post, idx) => \n            <PostItem\n                key={idx}\n                post={post}\n                users={this.props.users}\n                fetchPosts={this.props.fetchPosts}\n                fetchUsers={this.props.fetchUsers}\n                history={this.props.history}\n                currentUser={this.props.currentUser}\n                removePost={this.props.removePost} \n                fetchPostComments={this.props.fetchPostComments}\n                composeComment={this.props.composeComment}\n                fetchComment={this.props.fetchComment}\n                removeComment={this.props.removeComment}\n                comments={this.props.comments}\n                fetchAllComments={this.props.fetchAllComments}\n            />\n        ); \n\n        return (\n            <div>\n                <div className=\"user-profile\">\n                <h2>Hello, {this.capitalize(this.props.currentUser.username)}</h2>\n                <PostCompose currentUser={this.props.currentUser} newPost={this.props.newPost} composePost={this.props.composePost} history={this.props.history} />\n                </div>\n                <ul className=\"profile-list\">\n                    {list}\n                </ul>\n            </div>\n        )        \n    }\n\n    renderAsAnotherUser() {\ndebugger\n        if (this.props.users) {\n            const list = Object.values(this.props.posts[1]).map((post, idx) =>\n                <PostItem\n                    key={idx}\n                    post={post}\n                    users={this.props.users}\n                    fetchPosts={this.props.fetchPosts}\n                    fetchUsers={this.props.fetchUsers}\n                    history={this.props.history}\n                    currentUser={this.props.currentUser}\n                    removePost={this.props.removePost} \n\n                    fetchPostComments={this.props.fetchPostComments}\n                    composeComment={this.props.composeComment}\n                    fetchComment={this.props.fetchComment}\n                    removeComment={this.props.removeComment}\n                    comments={this.props.comments}\n                    fetchAllComments={this.props.fetchAllComments}\n\n                />\n            );\n\n            return (\n                <div className=\"another-class\">\n                    <h2>All of {this.props.users[this.props.user].username}'s Posts</h2>\n                    <ul className=\"posts\">\n                        {list}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        if (!this.state.user && (this.state.posts.length === 0)) {\n            return (<div className=\"profile-main\">\n                <div className=\"profile-loading\">\n                    <FontAwesomeIcon className=\"loading-icon\" icon={fasFaSpinner} />\n                </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"profile-main\">\n                    {/* <div className=\"profile-main-body\"> */}\n                        <button className=\"profile-button\" onClick={() => this.props.history.push('/posts')}><FontAwesomeIcon className=\"font-awesome-back\" icon={faArrowCircleLeft} /></button>\n                        {this.props.currentUser.id === this.props.user ? \n                        this.renderCurrentUser() : this.renderAsAnotherUser()}\n                    {/* </div> */}\n                    <Join/>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}