{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import Root from\"./components/root\";import configureStore from\"./store/store\";import jwt_decode from\"jwt-decode\";import{setAuthToken}from\"./util/session_api_util\";import{logout}from\"./actions/session_actions\";import{fetchMarkers,createMarker}from\"./actions/marker_action\";document.addEventListener(\"DOMContentLoaded\",function(){var store;store=configureStore();window.getState=store.getState;window.dispatch=store.dispatch;window.fetchMarkers=fetchMarkers;window.createMarker=createMarker;if(localStorage.jwtToken){setAuthToken(localStorage.jwtToken);var decodedUser=jwt_decode(localStorage.jwtToken);var preloadedState={session:{isAuthenticated:true,user:decodedUser}};store=configureStore(preloadedState);var currentTime=Date.now()/1000;if(decodedUser.exp<currentTime){store.dispatch(logout());window.location.href=\"/login\";}}else{store=configureStore({});}window.getState=store.getState;var root=document.getElementById(\"root\");ReactDOM.render(/*#__PURE__*/React.createElement(Root,{store:store}),root);});","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/index.js"],"names":["React","ReactDOM","Root","configureStore","jwt_decode","setAuthToken","logout","fetchMarkers","createMarker","document","addEventListener","store","window","getState","dispatch","localStorage","jwtToken","decodedUser","preloadedState","session","isAuthenticated","user","currentTime","Date","now","exp","location","href","root","getElementById","render"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,eAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OAASC,YAAT,KAA6B,yBAA7B,CACA,OAASC,MAAT,KAAuB,2BAAvB,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,yBAA3C,CAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAA8C,UAAM,CAClD,GAAIC,CAAAA,KAAJ,CACAA,KAAK,CAAGR,cAAc,EAAtB,CACAS,MAAM,CAACC,QAAP,CAAkBF,KAAK,CAACE,QAAxB,CACAD,MAAM,CAACE,QAAP,CAAkBH,KAAK,CAACG,QAAxB,CACAF,MAAM,CAACL,YAAP,CAAsBA,YAAtB,CACAK,MAAM,CAACJ,YAAP,CAAsBA,YAAtB,CAEA,GAAIO,YAAY,CAACC,QAAjB,CAA2B,CACzBX,YAAY,CAACU,YAAY,CAACC,QAAd,CAAZ,CAEA,GAAMC,CAAAA,WAAW,CAAGb,UAAU,CAACW,YAAY,CAACC,QAAd,CAA9B,CACA,GAAME,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAE,CAAEC,eAAe,CAAE,IAAnB,CAAyBC,IAAI,CAAEJ,WAA/B,CADY,CAAvB,CAIAN,KAAK,CAAGR,cAAc,CAACe,cAAD,CAAtB,CAEA,GAAMI,CAAAA,WAAW,CAAGC,IAAI,CAACC,GAAL,GAAa,IAAjC,CAEA,GAAIP,WAAW,CAACQ,GAAZ,CAAkBH,WAAtB,CAAmC,CACjCX,KAAK,CAACG,QAAN,CAAeR,MAAM,EAArB,EACAM,MAAM,CAACc,QAAP,CAAgBC,IAAhB,CAAuB,QAAvB,CACD,CACF,CAhBD,IAgBO,CACLhB,KAAK,CAAGR,cAAc,CAAC,EAAD,CAAtB,CACD,CACDS,MAAM,CAACC,QAAP,CAAkBF,KAAK,CAACE,QAAxB,CACA,GAAMe,CAAAA,IAAI,CAAGnB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,CAAb,CAEA5B,QAAQ,CAAC6B,MAAT,cAAgB,oBAAC,IAAD,EAAM,KAAK,CAAEnB,KAAb,EAAhB,CAAwCiB,IAAxC,EACD,CA/BD","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./components/root\";\nimport configureStore from \"./store/store\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { setAuthToken } from \"./util/session_api_util\";\nimport { logout } from \"./actions/session_actions\";\nimport { fetchMarkers, createMarker } from \"./actions/marker_action\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store;\n  store = configureStore();\n  window.getState = store.getState;\n  window.dispatch = store.dispatch;\n  window.fetchMarkers = fetchMarkers;\n  window.createMarker = createMarker;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = {\n      session: { isAuthenticated: true, user: decodedUser },\n    };\n\n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = \"/login\";\n    }\n  } else {\n    store = configureStore({});\n  }\n  window.getState = store.getState;\n  const root = document.getElementById(\"root\");\n\n  ReactDOM.render(<Root store={store} />, root);\n});\n"]},"metadata":{},"sourceType":"module"}