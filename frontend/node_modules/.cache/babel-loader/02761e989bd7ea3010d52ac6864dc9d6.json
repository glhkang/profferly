{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js\";\nimport React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n    this.renderCurrentUser = this.renderCurrentUser.bind(this);\n  }\n\n  componentWillMount() {\n    //debugger\n    this.props.fetchUserPosts(this.props.user);\n    this.props.fetchUsers();\n    this.props.fetchPhotos();\n  }\n\n  componentWillReceiveProps(newState) {\n    ////debugger\n    this.setState({\n      posts: newState.posts\n    });\n  }\n\n  capitalize(string) {\n    let firstChar = string[0].toUpperCase();\n    let rest = string.slice(1);\n    return firstChar + rest;\n  }\n\n  renderCurrentUser() {\n    ////debugger\n    const list = Object.values(this.props.posts[1]).map(post => {\n      if (post.file) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"posts\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          className: \"post-item-li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item\",\n          key: post._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"post-item-image\",\n          src: post.file,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }\n        }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item-footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"post-item-footer-button\",\n          onClick: () => {\n            return this.props.removePost(post._id).then(() => this.props.history.go());\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, \"Delete\")))));\n      } else if (!post.file) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"posts\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          className: \"post-item-li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item\",\n          key: post._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }\n        }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-item-footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"post-item-footer-button\",\n          onClick: () => {\n            return this.props.removePost(post._id).then(() => this.props.history.go());\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, \"Delete\")))));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Hello, \", this.capitalize(this.props.currentUser.username)), /*#__PURE__*/React.createElement(PostCompose, {\n      currentUser: this.props.currentUser,\n      newPost: this.props.newPost,\n      composePost: this.props.composePost,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"profile-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, list));\n  }\n\n  renderAsAnotherUser() {\n    if (this.props.users) {\n      const list = Object.values(this.props.posts[1]).map(post => {\n        ////debugger\n        if (post.file) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: \"post-item-li\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"post-item\",\n            key: post._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"post-item-image\",\n            src: post.file,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"post-item-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }\n          }, post.text)));\n        } else if (!post.file) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: \"post-item-li\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"post-item\",\n            key: post._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"post-item-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }\n          }, post.text)));\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"another-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"All of 's Posts\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, list));\n    }\n  }\n\n  render() {\n    if (!this.state.user && this.state.posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-top-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Loading...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-top-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"profile-button\",\n        onClick: () => this.props.history.push('/posts'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"font-awesome-back\",\n        icon: faArrowCircleLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 110\n        }\n      })), this.props.currentUser.id === this.props.user ? this.renderCurrentUser() : this.renderAsAnotherUser());\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js"],"names":["React","PostItem","PostCompose","FontAwesomeIcon","faArrowCircleLeft","CommentsList","LikesDislikes","Moment","Profile","Component","constructor","props","state","posts","renderAsAnotherUser","bind","renderCurrentUser","componentWillMount","fetchUserPosts","user","fetchUsers","fetchPhotos","componentWillReceiveProps","newState","setState","capitalize","string","firstChar","toUpperCase","rest","slice","list","Object","values","map","post","file","_id","text","removePost","then","history","go","currentUser","username","newPost","composePost","users","render","length","push","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostItem from '../posts/post_item';\nimport PostCompose from '../posts/post_compose';\nimport './profile.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport CommentsList from '../comments/comments_list';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\nimport Moment from \"react-moment\";\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: []\n        }\n\n        this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n        this.renderCurrentUser = this.renderCurrentUser.bind(this);\n    }\n\n    componentWillMount() {\n//debugger\n        this.props.fetchUserPosts(this.props.user);\n        this.props.fetchUsers();\n        this.props.fetchPhotos();\n    }\n\n    componentWillReceiveProps(newState) {\n////debugger\n        this.setState({ posts: newState.posts });\n    }\n\n    capitalize(string) {\n        let firstChar = string[0].toUpperCase();\n        let rest = string.slice(1);\n\n        return firstChar + rest;\n    }\n\n    renderCurrentUser() {\n////debugger\n        const list = Object.values(this.props.posts[1]).map((post) => {\n            if (post.file) {\n                return (\n                    <div className=\"posts\">\n                        <li className=\"post-item-li\">\n                            <div className=\"post-item\" key={post._id}>\n                                <img className=\"post-item-image\" src= {post.file} />\n                                <div className=\"post-item-text\">\n                                    {post.text}\n                                </div>\n                            <div className=\"post-item-footer\">\n                        <button className=\"post-item-footer-button\" onClick={() => {\n                            return(\n                            this.props.removePost(post._id)\n                            .then(() => this.props.history.go())                        \n                            )\n                        } } \n                            \n                        >Delete</button></div></div>\n                    \n                        </li>\n                    </div>\n                )\n            } else if (!post.file) {\n                return (\n                    <div className=\"posts\">\n                        <li className=\"post-item-li\">\n                            <div className=\"post-item\" key={post._id}>\n                                <div className=\"post-item-text\">\n                                    {post.text}\n                                </div>\n                            <div className=\"post-item-footer\">\n                        <button className=\"post-item-footer-button\" onClick={() => {\n                            return(\n                            this.props.removePost(post._id)\n                            .then(() => this.props.history.go())                        \n                            )\n                        } } \n                            \n                        >Delete</button></div></div>\n                    \n                        </li>\n                    </div>\n                )\n            }\n        });\n\n        return (\n            <div>\n                <div className=\"user-profile\">\n                <h2>Hello, {this.capitalize(this.props.currentUser.username)}</h2>\n                <PostCompose currentUser={this.props.currentUser} newPost={this.props.newPost} composePost={this.props.composePost} history={this.props.history} />\n                </div>\n                <ul className=\"profile-list\">\n                    {list}\n                </ul>\n            </div>\n        )        \n    }\n\n    renderAsAnotherUser() {\n        if (this.props.users) {\n            const list = Object.values(this.props.posts[1]).map((post) => {\n////debugger\n                if (post.file) {\n                    return(\n                        <li className=\"post-item-li\"> \n                            <div className=\"post-item\" key={post._id}>\n                                <img className=\"post-item-image\" src= {post.file} />\n                                <div className=\"post-item-text\">\n                                    {post.text}\n                                </div>\n                            </div>\n                        </li>  \n                    )\n                } else if (!post.file) {\n                    return(\n                        <li className=\"post-item-li\"> \n                            <div className=\"post-item\" key={post._id}>\n                                <div className=\"post-item-text\">\n                                    {post.text}\n                                </div>\n                            </div>\n                        </li>  \n                    )\n                }\n            });\n\n        return (\n            <div className=\"another-class\">\n                <h2>All of 's Posts</h2>\n                <ul className=\"posts\">\n                    {list}\n                </ul>\n            </div>\n        )\n    }\n}\n\n    render() {\n        if (!this.state.user && (this.state.posts.length === 0)) {\n            return (<div className=\"profile-main\">\n                <div className=\"profile-top-section\"/>\n                <div className=\"profile-loading\">Loading...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"profile-main\">\n                    <div className=\"profile-top-section\"/>\n                    {/* <div className=\"profile-main-body\"> */}\n                        <button className=\"profile-button\" onClick={() => this.props.history.push('/posts')}><FontAwesomeIcon className=\"font-awesome-back\" icon={faArrowCircleLeft} /></button>\n                        {this.props.currentUser.id === this.props.user ? \n                        this.renderCurrentUser() : this.renderAsAnotherUser()}\n                    {/* </div> */}\n                </div>\n            )\n        }\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}