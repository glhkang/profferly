{"ast":null,"code":"import { RECEIVE_PHOTOS, RECEIVE_PHOTO, RECEIVE_POST_PHOTOS, DELETE_PHOTO } from '../actions/post_actions';\n\nconst PhotosReducer = (state = {\n  all: {},\n  post: {},\n  photo: {}\n}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case RECEIVE_PHOTOS:\n      newState.all = action.photos.data;\n      return newState;\n\n    case RECEIVE_PHOTO:\n      newState.photo = action.photo.data;\n      return newState;\n\n    case DELETE_PHOTO:\n      newState = Object.assign({}, state);\n      delete newState.all[action.photo.id];\n      return newState;\n\n    case RECEIVE_POST_PHOTOS:\n      newState.user = action.photos.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default PhotosReducer;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/reducers/photos_reducer.js"],"names":["RECEIVE_PHOTOS","RECEIVE_PHOTO","RECEIVE_POST_PHOTOS","DELETE_PHOTO","PhotosReducer","state","all","post","photo","action","Object","freeze","newState","assign","type","photos","data","id","user"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,aAAzB,EAAwCC,mBAAxC,EAA6DC,YAA7D,QAAiF,yBAAjF;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE,EAAjB;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAAT,EAA2CC,MAA3C,KAAsD;AACxEC,EAAAA,MAAM,CAACC,MAAP,CAAcN,KAAd;AACA,MAAIO,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBR,KAAlB,CAAf;;AACA,UAAQI,MAAM,CAACK,IAAf;AACI,SAAKd,cAAL;AACIY,MAAAA,QAAQ,CAACN,GAAT,GAAeG,MAAM,CAACM,MAAP,CAAcC,IAA7B;AACA,aAAOJ,QAAP;;AACJ,SAAKX,aAAL;AACIW,MAAAA,QAAQ,CAACJ,KAAT,GAAiBC,MAAM,CAACD,KAAP,CAAaQ,IAA9B;AACA,aAAOJ,QAAP;;AACJ,SAAKT,YAAL;AACIS,MAAAA,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBR,KAAlB,CAAX;AACA,aAAOO,QAAQ,CAACN,GAAT,CAAaG,MAAM,CAACD,KAAP,CAAaS,EAA1B,CAAP;AACA,aAAOL,QAAP;;AACJ,SAAKV,mBAAL;AACIU,MAAAA,QAAQ,CAACM,IAAT,GAAgBT,MAAM,CAACM,MAAP,CAAcC,IAA9B;AACA,aAAOJ,QAAP;;AACJ;AACI,aAAOP,KAAP;AAfR;AAiBH,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import { RECEIVE_PHOTOS, RECEIVE_PHOTO, RECEIVE_POST_PHOTOS, DELETE_PHOTO } from '../actions/post_actions';\n\nconst PhotosReducer = (state = { all: {}, post: {}, photo: {} }, action) => {\n    Object.freeze(state);\n    let newState = Object.assign({}, state);\n    switch (action.type) {\n        case RECEIVE_PHOTOS:\n            newState.all = action.photos.data;\n            return newState;\n        case RECEIVE_PHOTO:\n            newState.photo = action.photo.data;\n            return newState;\n        case DELETE_PHOTO:\n            newState = Object.assign({}, state);\n            delete newState.all[action.photo.id];\n            return newState;\n        case RECEIVE_POST_PHOTOS:\n            newState.user = action.photos.data;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default PhotosReducer;"]},"metadata":{},"sourceType":"module"}