{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport classNames from 'classnames';\nimport { validProgress } from './utils';\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      success = _ref.success,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n  /** @deprecated Use `percent` instead */\n\n  if (success && 'progress' in success) {\n    successPercent = success.progress;\n  }\n\n  if (success && 'percent' in success) {\n    successPercent = success.percent;\n  }\n\n  if (!successPercent) {\n    return ptg;\n  }\n\n  var successPtg = validProgress(successPercent);\n  return [successPercent, validProgress(ptg - successPtg)];\n}\n\nfunction getStrokeColor(_ref2) {\n  var success = _ref2.success,\n      strokeColor = _ref2.strokeColor,\n      successPercent = _ref2.successPercent;\n  var color = strokeColor || null;\n  /** @deprecated Use `percent` instead */\n\n  if (success && 'progress' in success) {\n    successPercent = success.progress;\n  }\n\n  if (success && 'percent' in success) {\n    successPercent = success.percent;\n  }\n\n  if (!successPercent) {\n    return color;\n  }\n\n  return [null, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top'; // Support gapDeg = 0 when type = 'dashboard'\n\n  var gapDeg;\n\n  if (gapDegree || gapDegree === 0) {\n    gapDeg = gapDegree;\n  } else if (type === 'dashboard') {\n    gapDeg = 75;\n  } // using className to style stroke color\n\n\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: gapDeg,\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/node_modules/antd/es/progress/Circle.js"],"names":["_defineProperty","React","Circle","RCCircle","classNames","validProgress","getPercentage","_ref","percent","success","successPercent","ptg","progress","successPtg","getStrokeColor","_ref2","strokeColor","color","props","prefixCls","width","strokeWidth","trailColor","strokeLinecap","gapPosition","gapDegree","type","children","circleSize","circleStyle","height","fontSize","circleWidth","gapPos","gapDeg","isGradient","Object","prototype","toString","call","wrapperClassName","concat","createElement","className","style","trailWidth"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport classNames from 'classnames';\nimport { validProgress } from './utils';\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      success = _ref.success,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n  /** @deprecated Use `percent` instead */\n\n  if (success && 'progress' in success) {\n    successPercent = success.progress;\n  }\n\n  if (success && 'percent' in success) {\n    successPercent = success.percent;\n  }\n\n  if (!successPercent) {\n    return ptg;\n  }\n\n  var successPtg = validProgress(successPercent);\n  return [successPercent, validProgress(ptg - successPtg)];\n}\n\nfunction getStrokeColor(_ref2) {\n  var success = _ref2.success,\n      strokeColor = _ref2.strokeColor,\n      successPercent = _ref2.successPercent;\n  var color = strokeColor || null;\n  /** @deprecated Use `percent` instead */\n\n  if (success && 'progress' in success) {\n    successPercent = success.progress;\n  }\n\n  if (success && 'percent' in success) {\n    successPercent = success.percent;\n  }\n\n  if (!successPercent) {\n    return color;\n  }\n\n  return [null, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top'; // Support gapDeg = 0 when type = 'dashboard'\n\n  var gapDeg;\n\n  if (gapDegree || gapDegree === 0) {\n    gapDeg = gapDegree;\n  } else if (type === 'dashboard') {\n    gapDeg = 75;\n  } // using className to style stroke color\n\n\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: gapDeg,\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;"]},"metadata":{},"sourceType":"module"}