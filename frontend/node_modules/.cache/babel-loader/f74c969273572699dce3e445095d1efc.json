{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PostItem from './post_item';\nimport PostCompose from './post_compose';\nimport { removePost } from '../../actions/post_actions';\nimport './posts.css';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers();\n    this.props.fetchPosts();\n  }\n\n  render() {\n    if (this.props.users) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PostCompose, {\n        currentUser: this.props.currentUser,\n        newPost: this.props.newPost,\n        composePost: this.props.composePost,\n        history: this.props.history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, \"All posts\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, this.props.posts.map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n        key: idx,\n        post: post,\n        users: this.props.users,\n        fetchPosts: this.props.fetchPosts,\n        fetchUsers: this.props.fetchUsers,\n        history: this.props.history,\n        currentUser: this.props.currentUser,\n        removePost: this.props.removePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default withRouter(Posts);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts.js"],"names":["React","withRouter","PostItem","PostCompose","removePost","Posts","Component","componentDidMount","props","fetchUsers","fetchPosts","render","users","currentUser","newPost","composePost","history","posts","map","post","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAC/BC,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,KAAL,CAAWC,UAAX;AACA,SAAKD,KAAL,CAAWE,UAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKH,KAAL,CAAWI,KAAf,EAAsB;AAClB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAArC;AAAkD,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAAtE;AAA+E,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,WAAvG;AAAoH,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,GAAP,kBAClB,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,IAAI,EAAED,IAFV;AAGI,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWI,KAHtB;AAII,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWE,UAJ3B;AAKI,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC,UAL3B;AAMI,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWQ,OANxB;AAOI,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWK,WAP5B;AAQI,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWJ,UAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADL,CAHJ,CADJ;AAoBH,KArBD,MAqBO;AACH,aAAO,IAAP;AACH;AACJ;;AA/B+B;;AAkCpC,eAAeH,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PostItem from './post_item';\nimport PostCompose from './post_compose';\nimport { removePost } from '../../actions/post_actions';\nimport './posts.css';\n\nclass Posts extends React.Component {\n     componentDidMount() {\n        this.props.fetchUsers();\n        this.props.fetchPosts();\n    }\n\n    render() {\n        if (this.props.users) {\n            return (\n                <div>\n                    <PostCompose currentUser={this.props.currentUser} newPost={this.props.newPost} composePost={this.props.composePost} history={this.props.history}/>\n                    <p>All posts</p>\n                    <div>\n                        {this.props.posts.map((post, idx) =>\n                            <PostItem\n                                key={idx}\n                                post={post}\n                                users={this.props.users}\n                                fetchPosts={this.props.fetchPosts}\n                                fetchUsers={this.props.fetchUsers}\n                                history={this.props.history}\n                                currentUser={this.props.currentUser}\n                                removePost={this.props.removePost} \n                            />\n                        )}\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default withRouter(Posts);"]},"metadata":{},"sourceType":"module"}