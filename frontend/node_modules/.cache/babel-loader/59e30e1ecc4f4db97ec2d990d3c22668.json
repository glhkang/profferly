{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PostItem from './post_item';\nimport PostCompose from './post_compose';\nimport MapContainer from '../map/map';\nimport { removePost } from '../../actions/post_actions';\nimport './posts.css';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers();\n    this.props.fetchPosts();\n    this.props.fetchAllComments();\n  }\n\n  render() {\n    if (this.props.users) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"all-posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"all-posts-above\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"posts-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }\n      }, \"Talk to us.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostCompose, {\n        currentUser: this.props.currentUser,\n        newPost: this.props.newPost,\n        composePost: this.props.composePost,\n        history: this.props.history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, \"Happenings:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 23\n        }\n      }, this.props.posts.map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n        key: idx,\n        post: post,\n        users: this.props.users,\n        fetchPosts: this.props.fetchPosts,\n        fetchUsers: this.props.fetchUsers,\n        history: this.props.history,\n        currentUser: this.props.currentUser,\n        removePost: this.props.removePost,\n        fetchPostComments: this.props.fetchPostComments,\n        composeComment: this.props.composeComment,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        comments: this.props.comments,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 31\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"map-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MapContainer, {\n        history: this.props.history,\n        path: \"/posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      })));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default withRouter(Posts);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/posts.js"],"names":["React","withRouter","PostItem","PostCompose","MapContainer","removePost","Posts","Component","componentDidMount","props","fetchUsers","fetchPosts","fetchAllComments","render","users","currentUser","newPost","composePost","history","posts","map","post","idx","fetchPostComments","composeComment","fetchComment","removeComment","comments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PostItem from './post_item';\nimport PostCompose from './post_compose';\nimport MapContainer from '../map/map';\nimport { removePost } from '../../actions/post_actions';\nimport './posts.css';\n\nclass Posts extends React.Component {\n     componentDidMount() {\n        this.props.fetchUsers();\n        this.props.fetchPosts();\n        this.props.fetchAllComments();\n    }\n\n    render() {\n        if (this.props.users) {\n            return (\n                <div className=\"all-posts\">\n                  <div className=\"all-posts-above\" />\n                    {/* <button onClick={(e) => {e.preventDefault(); this.props.history.push('/map')}}>Map</button> */}\n                  <section className=\"posts-container\">\n                  <h3>Talk to us.</h3>          \n                    <div className=\"posts-body\">\n                    <PostCompose currentUser={this.props.currentUser} newPost={this.props.newPost} composePost={this.props.composePost} history={this.props.history}/>\n\n                    <h5>Happenings:</h5>\n                      <div className=\"posts\">\n                          {this.props.posts.map((post, idx) =>\n                              <PostItem\n                                  key={idx}\n                                  post={post}\n                                  users={this.props.users}\n                                  fetchPosts={this.props.fetchPosts}\n                                  fetchUsers={this.props.fetchUsers}\n                                  history={this.props.history}\n                                  currentUser={this.props.currentUser}\n                                  removePost={this.props.removePost} \n\n                                  fetchPostComments={this.props.fetchPostComments}\n                                  composeComment={this.props.composeComment}\n                                  fetchComment={this.props.fetchComment}\n                                  removeComment={this.props.removeComment}\n                                  comments={this.props.comments}\n                                  fetchAllComments={this.props.fetchAllComments}\n\n                              />\n                          )}\n                      </div>\n                    </div>\n                  </section>\n                \n                <div className=\"map-container\">\n                    <MapContainer\n                        history={this.props.history}\n                        path='/posts'\n                    />\n                </div>\n              </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default withRouter(Posts);"]},"metadata":{},"sourceType":"module"}