{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\n/**\n * Always debounce error to avoid [error -> null -> error] blink\n */\n\nexport default function useCacheErrors(errors, changeTrigger, directly) {\n  var cacheRef = React.useRef({\n    errors: errors,\n    visible: !!errors.length\n  });\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  var update = function update() {\n    var prevVisible = cacheRef.current.visible;\n    var newVisible = !!errors.length;\n    var prevErrors = cacheRef.current.errors;\n    cacheRef.current.errors = errors;\n    cacheRef.current.visible = newVisible;\n\n    if (prevVisible !== newVisible) {\n      changeTrigger(newVisible);\n    } else if (prevErrors.length !== errors.length || prevErrors.some(function (prevErr, index) {\n      return prevErr !== errors[index];\n    })) {\n      forceUpdate({});\n    }\n  };\n\n  React.useEffect(function () {\n    if (!directly) {\n      var timeout = setTimeout(update, 10);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [errors]);\n\n  if (directly) {\n    update();\n  }\n\n  return [cacheRef.current.visible, cacheRef.current.errors];\n}","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/node_modules/antd/es/form/hooks/useCacheErrors.js"],"names":["_slicedToArray","React","useCacheErrors","errors","changeTrigger","directly","cacheRef","useRef","visible","length","_React$useState","useState","_React$useState2","forceUpdate","update","prevVisible","current","newVisible","prevErrors","some","prevErr","index","useEffect","timeout","setTimeout","clearTimeout"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA;;;;AAIA,eAAe,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,aAAhC,EAA+CC,QAA/C,EAAyD;AACtE,MAAIC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC1BJ,IAAAA,MAAM,EAAEA,MADkB;AAE1BK,IAAAA,OAAO,EAAE,CAAC,CAACL,MAAM,CAACM;AAFQ,GAAb,CAAf;;AAKA,MAAIC,eAAe,GAAGT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGZ,cAAc,CAACU,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;;AAIA,MAAIE,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,QAAIC,WAAW,GAAGT,QAAQ,CAACU,OAAT,CAAiBR,OAAnC;AACA,QAAIS,UAAU,GAAG,CAAC,CAACd,MAAM,CAACM,MAA1B;AACA,QAAIS,UAAU,GAAGZ,QAAQ,CAACU,OAAT,CAAiBb,MAAlC;AACAG,IAAAA,QAAQ,CAACU,OAAT,CAAiBb,MAAjB,GAA0BA,MAA1B;AACAG,IAAAA,QAAQ,CAACU,OAAT,CAAiBR,OAAjB,GAA2BS,UAA3B;;AAEA,QAAIF,WAAW,KAAKE,UAApB,EAAgC;AAC9Bb,MAAAA,aAAa,CAACa,UAAD,CAAb;AACD,KAFD,MAEO,IAAIC,UAAU,CAACT,MAAX,KAAsBN,MAAM,CAACM,MAA7B,IAAuCS,UAAU,CAACC,IAAX,CAAgB,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC1F,aAAOD,OAAO,KAAKjB,MAAM,CAACkB,KAAD,CAAzB;AACD,KAFiD,CAA3C,EAEH;AACFR,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAdD;;AAgBAZ,EAAAA,KAAK,CAACqB,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACjB,QAAL,EAAe;AACb,UAAIkB,OAAO,GAAGC,UAAU,CAACV,MAAD,EAAS,EAAT,CAAxB;AACA,aAAO,YAAY;AACjB,eAAOW,YAAY,CAACF,OAAD,CAAnB;AACD,OAFD;AAGD;AACF,GAPD,EAOG,CAACpB,MAAD,CAPH;;AASA,MAAIE,QAAJ,EAAc;AACZS,IAAAA,MAAM;AACP;;AAED,SAAO,CAACR,QAAQ,CAACU,OAAT,CAAiBR,OAAlB,EAA2BF,QAAQ,CAACU,OAAT,CAAiBb,MAA5C,CAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\n/**\n * Always debounce error to avoid [error -> null -> error] blink\n */\n\nexport default function useCacheErrors(errors, changeTrigger, directly) {\n  var cacheRef = React.useRef({\n    errors: errors,\n    visible: !!errors.length\n  });\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  var update = function update() {\n    var prevVisible = cacheRef.current.visible;\n    var newVisible = !!errors.length;\n    var prevErrors = cacheRef.current.errors;\n    cacheRef.current.errors = errors;\n    cacheRef.current.visible = newVisible;\n\n    if (prevVisible !== newVisible) {\n      changeTrigger(newVisible);\n    } else if (prevErrors.length !== errors.length || prevErrors.some(function (prevErr, index) {\n      return prevErr !== errors[index];\n    })) {\n      forceUpdate({});\n    }\n  };\n\n  React.useEffect(function () {\n    if (!directly) {\n      var timeout = setTimeout(update, 10);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [errors]);\n\n  if (directly) {\n    update();\n  }\n\n  return [cacheRef.current.visible, cacheRef.current.errors];\n}"]},"metadata":{},"sourceType":"module"}