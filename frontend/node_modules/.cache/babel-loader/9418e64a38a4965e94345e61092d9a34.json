{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/session/login_form.js\";\nimport React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport \"./session_form.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props); ////debugger\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n    this.guestUserLogin = this.guestUserLogin.bind(this);\n  } // Once the user has been authenticated, redirect to the Tweets page. /TWEETS was edited below\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/posts');\n    } // Set or clear errors\n\n\n    this.setState({\n      errors: nextProps.errors\n    });\n  } // Handle field updates (called in the render method)\n\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  } // Handle form submission\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    }; ////debugger\n\n    this.props.login(user);\n  } // Render the session errors if there are any\n\n\n  renderErrors() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, Object.keys(this.state.errors).map((error, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: `error-${i}`,\n      className: \"session-errors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.state.errors[error])));\n  }\n\n  guestUserLogin(e) {\n    e.preventDefault();\n    const guestUser = {\n      email: \"profferly8@profferly.com\",\n      password: \"profferly8\"\n    };\n    this.props.login(guestUser);\n  }\n\n  render() {\n    ////debugger\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"session-form-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"session-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"session-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-signup-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/images/black_logo_bold.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Welcome Back to Profferly!\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"session-form-field\",\n      value: this.state.email,\n      onChange: this.update('email'),\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"session-form-field\",\n      value: this.state.password,\n      onChange: this.update('password'),\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"session-button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"demo-button\",\n      type: \"submit\",\n      value: \"Demo User\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }), this.renderErrors()))));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/session/login_form.js"],"names":["React","withRouter","Link","LoginForm","Component","constructor","props","state","email","password","errors","handleSubmit","bind","renderErrors","guestUserLogin","componentWillReceiveProps","nextProps","currentUser","history","push","setState","update","field","e","currentTarget","value","preventDefault","user","login","Object","keys","map","error","i","guestUser","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport \"./session_form.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n////debugger\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n    this.guestUserLogin = this.guestUserLogin.bind(this);\n  }\n\n  // Once the user has been authenticated, redirect to the Tweets page. /TWEETS was edited below\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/posts');\n    }\n\n    // Set or clear errors\n    this.setState({errors: nextProps.errors})\n  }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  // Handle form submission\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n  ////debugger\n    \n    this.props.login(user); \n  }\n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}\n            className=\"session-errors\">\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  guestUserLogin(e) {\n    e.preventDefault();\n    const guestUser = { email: \"profferly8@profferly.com\", password: \"profferly8\" };\n    this.props.login(guestUser)\n  };\n\n\n  render() {\n////debugger\n    return (\n      <div className=\"session-form-main\">\n        <div className=\"session-form-container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"session-form\">\n              <div className=\"login-signup-header\">\n                <img src=\"/assets/images/black_logo_bold.png\" />\n                <h3>Welcome Back to Profferly!</h3>\n              </div>\n                {/* <label\n                  className=\"session-form-label\">Email\n                </label> */}\n                <br/>\n                <input type=\"text\"\n                  className=\"session-form-field\"\n                  value={this.state.email}\n                  onChange={this.update('email')}\n                  placeholder=\"Email\"\n                />\n              \n                {/* <label className=\"session-form-label\">Password\n                </label> */}\n                <br/>\n                <input type=\"password\"\n                className=\"session-form-field\"\n                  value={this.state.password}\n                  onChange={this.update('password')}\n                  placeholder=\"Password\"\n                />\n    \n              <input \n                className=\"session-button\"\n                type=\"submit\" value=\"Submit\" />\n              <input className=\"demo-button\" type=\"submit\" value=\"Demo User\" />\n              {this.renderErrors()}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}