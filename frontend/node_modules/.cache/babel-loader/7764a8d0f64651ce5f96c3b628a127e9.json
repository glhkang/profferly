{"ast":null,"code":"import*as APIUtil from\"../util/session_api_util\";import jwt_decode from\"jwt-decode\";export var RECEIVE_CURRENT_USER=\"RECEIVE_CURRENT_USER\";export var RECEIVE_SESSION_ERRORS=\"RECEIVE_SESSION_ERRORS\";export var RECEIVE_USER_LOGOUT=\"RECEIVE_USER_LOGOUT\";export var RECEIVE_USER_SIGN_IN=\"RECEIVE_USER_SIGN_IN\";export var RECEIVE_USER_ROOMS_ADD=\"RECEIVE_USER_ROOMS_ADD\";export var addRoomToRedux=function addRoomToRedux(room){return{type:RECEIVE_USER_ROOMS_ADD,room:room};};export var receiveCurrentUser=function receiveCurrentUser(currentUser){return{type:RECEIVE_CURRENT_USER,currentUser:currentUser};};export var receiveUserSignIn=function receiveUserSignIn(){return{type:RECEIVE_USER_SIGN_IN};};export var receiveErrors=function receiveErrors(errors){return{type:RECEIVE_SESSION_ERRORS,errors:errors};};export var logoutUser=function logoutUser(){return{type:RECEIVE_USER_LOGOUT};};export var signup=function signup(user){return function(dispatch){return APIUtil.signup(user).then(function(res){var token=res.data.token;localStorage.setItem(\"jwtToken\",token);APIUtil.setAuthToken(token);var decoded=jwt_decode(token);dispatch(receiveCurrentUser(decoded));}).catch(function(err){dispatch(receiveErrors(err.response.data));});};};export var login=function login(user){return function(dispatch){return APIUtil.login(user).then(function(res){var token=res.data.token;localStorage.setItem(\"jwtToken\",token);APIUtil.setAuthToken(token);var decoded=jwt_decode(token);dispatch(receiveCurrentUser(decoded));}).catch(function(err){dispatch(receiveErrors(err.response.data));});};};export var logout=function logout(){return function(dispatch){localStorage.removeItem(\"jwtToken\");APIUtil.setAuthToken(false);dispatch(logoutUser());};};","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/actions/session_actions.js"],"names":["APIUtil","jwt_decode","RECEIVE_CURRENT_USER","RECEIVE_SESSION_ERRORS","RECEIVE_USER_LOGOUT","RECEIVE_USER_SIGN_IN","RECEIVE_USER_ROOMS_ADD","addRoomToRedux","room","type","receiveCurrentUser","currentUser","receiveUserSignIn","receiveErrors","errors","logoutUser","signup","user","dispatch","then","res","token","data","localStorage","setItem","setAuthToken","decoded","catch","err","response","login","logout","removeItem"],"mappings":"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","sourcesContent":["import * as APIUtil from \"../util/session_api_util\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\nexport const RECEIVE_USER_ROOMS_ADD = \"RECEIVE_USER_ROOMS_ADD\";\n\nexport const addRoomToRedux = (room) => {\n  return {\n    type: RECEIVE_USER_ROOMS_ADD,\n    room,\n  };\n};\n\nexport const receiveCurrentUser = (currentUser) => {\n  return {\n    type: RECEIVE_CURRENT_USER,\n    currentUser,\n  };\n};\n\nexport const receiveUserSignIn = () => {\n  return {\n    type: RECEIVE_USER_SIGN_IN,\n  };\n};\n\nexport const receiveErrors = (errors) => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors,\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\nexport const signup = (user) => (dispatch) => {\n  return APIUtil.signup(user)\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      APIUtil.setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(receiveCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch(receiveErrors(err.response.data));\n    });\n};\n\nexport const login = (user) => (dispatch) => {\n  return APIUtil.login(user)\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      APIUtil.setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(receiveCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch(receiveErrors(err.response.data));\n    });\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};\n"]},"metadata":{},"sourceType":"module"}