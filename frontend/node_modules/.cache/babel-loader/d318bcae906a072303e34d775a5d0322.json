{"ast":null,"code":"import { RECEIVE_COMMENT, RECEIVE_NEW_COMMENT, RECEIVE_POST_COMMENTS, DELETE_COMMENT, RECEIVE_COMMENTS } from '../actions/comment_actions'; // all: { }, post: { }, comment: { }, new: null \n\nconst CommentsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({\n    all: {}\n  }, state);\n\n  switch (action.type) {\n    case RECEIVE_NEW_COMMENT:\n      newState.all = [...newState.all, action.comment.data];\n      return newState;\n\n    case DELETE_COMMENT:\n      newState.all = newState.all.filter(comment => action.commentId !== comment._id); // delete newState.all[action.commentId]\n\n      return newState;\n\n    case RECEIVE_COMMENTS:\n      newState.all = action.comments.data;\n      return newState;\n\n    case RECEIVE_POST_COMMENTS:\n      newState.comments = action.comments.data;\n      return newState;\n\n    case RECEIVE_COMMENT:\n      newState.comment = action.comment.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default CommentsReducer;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/reducers/comments_reducer.js"],"names":["RECEIVE_COMMENT","RECEIVE_NEW_COMMENT","RECEIVE_POST_COMMENTS","DELETE_COMMENT","RECEIVE_COMMENTS","CommentsReducer","state","action","Object","freeze","newState","assign","all","type","comment","data","filter","commentId","_id","comments"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,mBAA1B,EAA+CC,qBAA/C,EAAsEC,cAAtE,EAAsFC,gBAAtF,QAA8G,4BAA9G,C,CAEA;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAcC,MAAd,KAAyB;AAE7CC,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd;AACA,MAAII,QAAQ,GAAGF,MAAM,CAACG,MAAP,CAAc;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd,EAA2BN,KAA3B,CAAf;;AAEA,UAAQC,MAAM,CAACM,IAAf;AACI,SAAKZ,mBAAL;AACIS,MAAAA,QAAQ,CAACE,GAAT,GAAe,CAAC,GAAGF,QAAQ,CAACE,GAAb,EAAkBL,MAAM,CAACO,OAAP,CAAeC,IAAjC,CAAf;AACA,aAAOL,QAAP;;AACJ,SAAKP,cAAL;AACIO,MAAAA,QAAQ,CAACE,GAAT,GAAeF,QAAQ,CAACE,GAAT,CAAaI,MAAb,CAAqBF,OAAD,IAAaP,MAAM,CAACU,SAAP,KAAqBH,OAAO,CAACI,GAA9D,CAAf,CADJ,CAEI;;AACA,aAAOR,QAAP;;AACJ,SAAKN,gBAAL;AACIM,MAAAA,QAAQ,CAACE,GAAT,GAAeL,MAAM,CAACY,QAAP,CAAgBJ,IAA/B;AACA,aAAOL,QAAP;;AAEJ,SAAKR,qBAAL;AACIQ,MAAAA,QAAQ,CAACS,QAAT,GAAoBZ,MAAM,CAACY,QAAP,CAAgBJ,IAApC;AACA,aAAOL,QAAP;;AACJ,SAAKV,eAAL;AACIU,MAAAA,QAAQ,CAACI,OAAT,GAAmBP,MAAM,CAACO,OAAP,CAAeC,IAAlC;AACA,aAAOL,QAAP;;AACJ;AACI,aAAOJ,KAAP;AAnBR;AAuBH,CA5BD;;AA8BA,eAAeD,eAAf","sourcesContent":["import { RECEIVE_COMMENT, RECEIVE_NEW_COMMENT, RECEIVE_POST_COMMENTS, DELETE_COMMENT, RECEIVE_COMMENTS } from '../actions/comment_actions';\n\n// all: { }, post: { }, comment: { }, new: null \nconst CommentsReducer = (state = { }, action) => {\n\n    Object.freeze(state);\n    let newState = Object.assign({ all: {} }, state)\n\n    switch (action.type) {\n        case RECEIVE_NEW_COMMENT:\n            newState.all = [...newState.all, action.comment.data]\n            return newState;\n        case DELETE_COMMENT:\n            newState.all = newState.all.filter((comment) => action.commentId !== comment._id )\n            // delete newState.all[action.commentId]\n            return newState;        \n        case RECEIVE_COMMENTS:\n            newState.all = action.comments.data\n            return newState;\n\n        case RECEIVE_POST_COMMENTS:\n            newState.comments = action.comments.data;\n            return newState;\n        case RECEIVE_COMMENT:\n            newState.comment = action.comment.data;\n            return newState;\n        default:\n            return state;\n    }\n\n\n};\n\nexport default CommentsReducer;"]},"metadata":{},"sourceType":"module"}