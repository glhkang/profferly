{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ConfirmDialog from '../ConfirmDialog';\nimport defaultLocale from '../../locale/default';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport { ConfigContext } from '../../config-provider';\n\nvar HookModal = function HookModal(_ref, ref) {\n  var afterClose = _ref.afterClose,\n      config = _ref.config;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(config),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      innerConfig = _React$useState4[0],\n      setInnerConfig = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      direction = _React$useContext.direction;\n\n  function close() {\n    setVisible(false);\n  }\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      destroy: close,\n      update: function update(newConfig) {\n        setInnerConfig(function (originConfig) {\n          return _extends(_extends({}, originConfig), newConfig);\n        });\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, function (modalLocale) {\n    return /*#__PURE__*/React.createElement(ConfirmDialog, _extends({}, innerConfig, {\n      close: close,\n      visible: visible,\n      afterClose: afterClose,\n      okText: innerConfig.okText || (innerConfig.okCancel ? modalLocale.okText : modalLocale.justOkText),\n      direction: direction,\n      cancelText: innerConfig.cancelText || modalLocale.cancelText\n    }));\n  });\n};\n\nexport default /*#__PURE__*/React.forwardRef(HookModal);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/node_modules/antd/es/modal/useModal/HookModal.js"],"names":["_extends","_slicedToArray","React","ConfirmDialog","defaultLocale","LocaleReceiver","ConfigContext","HookModal","_ref","ref","afterClose","config","_React$useState","useState","_React$useState2","visible","setVisible","_React$useState3","_React$useState4","innerConfig","setInnerConfig","_React$useContext","useContext","direction","close","useImperativeHandle","destroy","update","newConfig","originConfig","createElement","componentName","Modal","modalLocale","okText","okCancel","justOkText","cancelText","forwardRef"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8B;AAC5C,MAAIC,UAAU,GAAGF,IAAI,CAACE,UAAtB;AAAA,MACIC,MAAM,GAAGH,IAAI,CAACG,MADlB;;AAGA,MAAIC,eAAe,GAAGV,KAAK,CAACW,QAAN,CAAe,IAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGb,cAAc,CAACW,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,OAAO,GAAGD,gBAAgB,CAAC,CAAD,CAF9B;AAAA,MAGIE,UAAU,GAAGF,gBAAgB,CAAC,CAAD,CAHjC;;AAKA,MAAIG,gBAAgB,GAAGf,KAAK,CAACW,QAAN,CAAeF,MAAf,CAAvB;AAAA,MACIO,gBAAgB,GAAGjB,cAAc,CAACgB,gBAAD,EAAmB,CAAnB,CADrC;AAAA,MAEIE,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;AAAA,MAGIE,cAAc,GAAGF,gBAAgB,CAAC,CAAD,CAHrC;;AAKA,MAAIG,iBAAiB,GAAGnB,KAAK,CAACoB,UAAN,CAAiBhB,aAAjB,CAAxB;AAAA,MACIiB,SAAS,GAAGF,iBAAiB,CAACE,SADlC;;AAGA,WAASC,KAAT,GAAiB;AACfR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAEDd,EAAAA,KAAK,CAACuB,mBAAN,CAA0BhB,GAA1B,EAA+B,YAAY;AACzC,WAAO;AACLiB,MAAAA,OAAO,EAAEF,KADJ;AAELG,MAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;AACjCR,QAAAA,cAAc,CAAC,UAAUS,YAAV,EAAwB;AACrC,iBAAO7B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK6B,YAAL,CAAT,EAA6BD,SAA7B,CAAf;AACD,SAFa,CAAd;AAGD;AANI,KAAP;AAQD,GATD;AAUA,SAAO,aAAa1B,KAAK,CAAC4B,aAAN,CAAoBzB,cAApB,EAAoC;AACtD0B,IAAAA,aAAa,EAAE,OADuC;AAEtD3B,IAAAA,aAAa,EAAEA,aAAa,CAAC4B;AAFyB,GAApC,EAGjB,UAAUC,WAAV,EAAuB;AACxB,WAAO,aAAa/B,KAAK,CAAC4B,aAAN,CAAoB3B,aAApB,EAAmCH,QAAQ,CAAC,EAAD,EAAKmB,WAAL,EAAkB;AAC/EK,MAAAA,KAAK,EAAEA,KADwE;AAE/ET,MAAAA,OAAO,EAAEA,OAFsE;AAG/EL,MAAAA,UAAU,EAAEA,UAHmE;AAI/EwB,MAAAA,MAAM,EAAEf,WAAW,CAACe,MAAZ,KAAuBf,WAAW,CAACgB,QAAZ,GAAuBF,WAAW,CAACC,MAAnC,GAA4CD,WAAW,CAACG,UAA/E,CAJuE;AAK/Eb,MAAAA,SAAS,EAAEA,SALoE;AAM/Ec,MAAAA,UAAU,EAAElB,WAAW,CAACkB,UAAZ,IAA0BJ,WAAW,CAACI;AAN6B,KAAlB,CAA3C,CAApB;AAQD,GAZmB,CAApB;AAaD,CA5CD;;AA8CA,eAAe,aAAanC,KAAK,CAACoC,UAAN,CAAiB/B,SAAjB,CAA5B","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ConfirmDialog from '../ConfirmDialog';\nimport defaultLocale from '../../locale/default';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport { ConfigContext } from '../../config-provider';\n\nvar HookModal = function HookModal(_ref, ref) {\n  var afterClose = _ref.afterClose,\n      config = _ref.config;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(config),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      innerConfig = _React$useState4[0],\n      setInnerConfig = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      direction = _React$useContext.direction;\n\n  function close() {\n    setVisible(false);\n  }\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      destroy: close,\n      update: function update(newConfig) {\n        setInnerConfig(function (originConfig) {\n          return _extends(_extends({}, originConfig), newConfig);\n        });\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, function (modalLocale) {\n    return /*#__PURE__*/React.createElement(ConfirmDialog, _extends({}, innerConfig, {\n      close: close,\n      visible: visible,\n      afterClose: afterClose,\n      okText: innerConfig.okText || (innerConfig.okCancel ? modalLocale.okText : modalLocale.justOkText),\n      direction: direction,\n      cancelText: innerConfig.cancelText || modalLocale.cancelText\n    }));\n  });\n};\n\nexport default /*#__PURE__*/React.forwardRef(HookModal);"]},"metadata":{},"sourceType":"module"}