{"ast":null,"code":"import { getPosts, getUserPosts, writePost, getPost, deletePost } from \"../util/post_api_util\";\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\nexport const RECEIVE_USER_POSTS = \"RECEIVE_USER_POSTS\";\nexport const RECEIVE_NEW_POST = \"RECEIVE_NEW_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const RECEIVE_POST = \"RECEIVE_POST\";\nexport const receivePosts = posts => ({\n  type: RECEIVE_POSTS,\n  posts\n});\nexport const receiveUserPosts = posts => ({\n  type: RECEIVE_USER_POSTS,\n  posts\n});\nexport const receiveNewPost = post => ({\n  type: RECEIVE_NEW_POST,\n  post\n});\nexport const receivePost = post => ({\n  type: RECEIVE_POST,\n  post\n});\nexport const removeUserPost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const fetchPosts = () => dispatch => getPosts().then(posts => dispatch(receivePosts(posts))).catch(err => console.log(err));\nexport const fetchUserPosts = id => dispatch => getUserPosts(id).then(posts => dispatch(receiveUserPosts(posts))).catch(err => console.log(err));\nexport const composePost = data => dispatch => {\n  debugger;\n  return writePost(data).then(post => dispatch(receiveNewPost(post))).catch(err => console.log(err));\n};\nexport const removePost = postId => dispatch => deletePost(postId).then(postId => dispatch(removeUserPost(postId))).catch(err => console.log(err));\nexport const fetchPost = id => dispatch => getPost(id).then(post => dispatch(receivePost(post)));","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/actions/post_actions.js"],"names":["getPosts","getUserPosts","writePost","getPost","deletePost","RECEIVE_POSTS","RECEIVE_USER_POSTS","RECEIVE_NEW_POST","DELETE_POST","RECEIVE_POST","receivePosts","posts","type","receiveUserPosts","receiveNewPost","post","receivePost","removeUserPost","postId","fetchPosts","dispatch","then","catch","err","console","log","fetchUserPosts","id","composePost","data","removePost","fetchPost"],"mappings":"AAAA,SACEA,QADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,UALF,QAMO,uBANP;AAQA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAEP,aADgC;AAEtCM,EAAAA;AAFsC,CAAZ,CAArB;AAKP,OAAO,MAAME,gBAAgB,GAAIF,KAAD,KAAY;AAC1CC,EAAAA,IAAI,EAAEN,kBADoC;AAE1CK,EAAAA;AAF0C,CAAZ,CAAzB;AAKP,OAAO,MAAMG,cAAc,GAAIC,IAAD,KAAW;AACvCH,EAAAA,IAAI,EAAEL,gBADiC;AAEvCQ,EAAAA;AAFuC,CAAX,CAAvB;AAKP,OAAO,MAAMC,WAAW,GAAID,IAAD,KAAW;AACpCH,EAAAA,IAAI,EAAEH,YAD8B;AAEpCM,EAAAA;AAFoC,CAAX,CAApB;AAKP,OAAO,MAAME,cAAc,GAAIC,MAAD,KAAa;AACzCN,EAAAA,IAAI,EAAEJ,WADmC;AAEzCU,EAAAA;AAFyC,CAAb,CAAvB;AAKP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAD,IAC9BpB,QAAQ,GACLqB,IADH,CACSV,KAAD,IAAWS,QAAQ,CAACV,YAAY,CAACC,KAAD,CAAb,CAD3B,EAEGW,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB,CADK;AAKP,OAAO,MAAMG,cAAc,GAAIC,EAAD,IAASP,QAAD,IACpCnB,YAAY,CAAC0B,EAAD,CAAZ,CACGN,IADH,CACSV,KAAD,IAAWS,QAAQ,CAACP,gBAAgB,CAACF,KAAD,CAAjB,CAD3B,EAEGW,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB,CADK;AAKP,OAAO,MAAMK,WAAW,GAAIC,IAAD,IAAWT,QAAD,IAAc;AACnD;AACE,SAAOlB,SAAS,CAAC2B,IAAD,CAAT,CACJR,IADI,CACEN,IAAD,IAAUK,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CADnB,EAEJO,KAFI,CAEGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFX,CAAP;AAGD,CALM;AAOP,OAAO,MAAMO,UAAU,GAAIZ,MAAD,IAAaE,QAAD,IACpChB,UAAU,CAACc,MAAD,CAAV,CACGG,IADH,CACSH,MAAD,IAAYE,QAAQ,CAACH,cAAc,CAACC,MAAD,CAAf,CAD5B,EAEGI,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB,CADK;AAKP,OAAO,MAAMQ,SAAS,GAAIJ,EAAD,IAASP,QAAD,IAC/BjB,OAAO,CAACwB,EAAD,CAAP,CAAYN,IAAZ,CAAkBN,IAAD,IAAUK,QAAQ,CAACJ,WAAW,CAACD,IAAD,CAAZ,CAAnC,CADK","sourcesContent":["import {\n  getPosts,\n  getUserPosts,\n  writePost,\n  getPost,\n  deletePost,\n} from \"../util/post_api_util\";\n\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\nexport const RECEIVE_USER_POSTS = \"RECEIVE_USER_POSTS\";\nexport const RECEIVE_NEW_POST = \"RECEIVE_NEW_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const RECEIVE_POST = \"RECEIVE_POST\";\n\nexport const receivePosts = (posts) => ({\n  type: RECEIVE_POSTS,\n  posts,\n});\n\nexport const receiveUserPosts = (posts) => ({\n  type: RECEIVE_USER_POSTS,\n  posts,\n});\n\nexport const receiveNewPost = (post) => ({\n  type: RECEIVE_NEW_POST,\n  post,\n});\n\nexport const receivePost = (post) => ({\n  type: RECEIVE_POST,\n  post,\n});\n\nexport const removeUserPost = (postId) => ({\n  type: DELETE_POST,\n  postId,\n});\n\nexport const fetchPosts = () => (dispatch) =>\n  getPosts()\n    .then((posts) => dispatch(receivePosts(posts)))\n    .catch((err) => console.log(err));\n\nexport const fetchUserPosts = (id) => (dispatch) =>\n  getUserPosts(id)\n    .then((posts) => dispatch(receiveUserPosts(posts)))\n    .catch((err) => console.log(err));\n\nexport const composePost = (data) => (dispatch) => {\ndebugger\n  return writePost(data)\n    .then((post) => dispatch(receiveNewPost(post)))\n    .catch((err) => console.log(err));\n};\n\nexport const removePost = (postId) => (dispatch) =>\n  deletePost(postId)\n    .then((postId) => dispatch(removeUserPost(postId)))\n    .catch((err) => console.log(err));\n\nexport const fetchPost = (id) => (dispatch) =>\n  getPost(id).then((post) => dispatch(receivePost(post)));\n"]},"metadata":{},"sourceType":"module"}