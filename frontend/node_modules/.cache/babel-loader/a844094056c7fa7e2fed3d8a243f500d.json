{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js\";\nimport React from \"react\";\nimport PostItem from \"../posts/post_item\";\nimport PostCompose from \"../posts/post_compose\";\nimport \"./profile.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport Join from \"../chat/join\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n    this.renderCurrentUser = this.renderCurrentUser.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.fetchUserPosts(this.props.user);\n    this.props.fetchUsers();\n    this.props.fetchPhotos();\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({\n      posts: newState.posts\n    });\n  }\n\n  capitalize(string) {\n    let splitStr = string.split(\" \");\n    let capWords = splitStr.map(subStr => subStr[0].toUpperCase() + subStr.slice(1));\n    let capped = capWords.join(\" \");\n    return capped;\n  }\n\n  renderCurrentUser() {\n    const list = Object.values(this.props.posts[1]).map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n      key: idx,\n      post: post,\n      users: this.props.users,\n      fetchPosts: this.props.fetchPosts,\n      fetchUsers: this.props.fetchUsers,\n      history: this.props.history,\n      currentUser: this.props.currentUser,\n      removePost: this.props.removePost,\n      fetchPostComments: this.props.fetchPostComments,\n      composeComment: this.props.composeComment,\n      fetchComment: this.props.fetchComment,\n      removeComment: this.props.removeComment,\n      comments: this.props.comments,\n      fetchAllComments: this.props.fetchAllComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-user-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-profile-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user-profile-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Hello, \", this.capitalize(this.props.currentUser.username)), /*#__PURE__*/React.createElement(PostCompose, {\n      currentUser: this.props.currentUser,\n      newPost: this.props.newPost,\n      composePost: this.props.composePost,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"profile-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, list)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-user-join\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Join, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  renderAsAnotherUser() {\n    if (this.props.users) {\n      const list = Object.values(this.props.posts[1]).map((post, idx) => /*#__PURE__*/React.createElement(PostItem, {\n        key: idx,\n        post: post,\n        users: this.props.users,\n        fetchPosts: this.props.fetchPosts,\n        fetchUsers: this.props.fetchUsers,\n        history: this.props.history,\n        currentUser: this.props.currentUser,\n        removePost: this.props.removePost,\n        fetchPostComments: this.props.fetchPostComments,\n        composeComment: this.props.composeComment,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        comments: this.props.comments,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-profile-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \"All of\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"user-profile-username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, this.props.users[this.props.user] ? this.props.users[this.props.user].username : null), \"'s Posts\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, list));\n    }\n  }\n\n  render() {\n    if (!this.state.user && this.state.posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"loading-icon\",\n        icon: faSpinner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"profile-button\",\n        onClick: () => this.props.history.push(\"/posts\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"font-awesome-back\",\n        icon: faArrowCircleLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      })), this.props.currentUser.id === this.props.user ? this.renderCurrentUser() : this.renderAsAnotherUser());\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/profile/profile.js"],"names":["React","PostItem","PostCompose","FontAwesomeIcon","faArrowCircleLeft","faSpinner","Join","Profile","Component","constructor","props","state","posts","renderAsAnotherUser","bind","renderCurrentUser","componentWillMount","fetchUserPosts","user","fetchUsers","fetchPhotos","componentWillReceiveProps","newState","setState","capitalize","string","splitStr","split","capWords","map","subStr","toUpperCase","slice","capped","join","list","Object","values","post","idx","users","fetchPosts","history","currentUser","removePost","fetchPostComments","composeComment","fetchComment","removeComment","comments","fetchAllComments","username","newPost","composePost","render","length","push","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PostItem from \"../posts/post_item\";\nimport PostCompose from \"../posts/post_compose\";\nimport \"./profile.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Join from \"../chat/join\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n    };\n\n    this.renderAsAnotherUser = this.renderAsAnotherUser.bind(this);\n    this.renderCurrentUser = this.renderCurrentUser.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.fetchUserPosts(this.props.user);\n    this.props.fetchUsers();\n    this.props.fetchPhotos();\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({ posts: newState.posts });\n  }\n\n  capitalize(string) {\n    let splitStr = string.split(\" \");\n    let capWords = splitStr.map((subStr) => subStr[0].toUpperCase() + subStr.slice(1));\n    let capped = capWords.join(\" \");\n    return capped;\n  }\n\n  renderCurrentUser() {\n    const list = Object.values(this.props.posts[1]).map((post, idx) => (\n      <PostItem\n        key={idx}\n        post={post}\n        users={this.props.users}\n        fetchPosts={this.props.fetchPosts}\n        fetchUsers={this.props.fetchUsers}\n        history={this.props.history}\n        currentUser={this.props.currentUser}\n        removePost={this.props.removePost}\n        fetchPostComments={this.props.fetchPostComments}\n        composeComment={this.props.composeComment}\n        fetchComment={this.props.fetchComment}\n        removeComment={this.props.removeComment}\n        comments={this.props.comments}\n        fetchAllComments={this.props.fetchAllComments}\n      />\n    ));\n\n    return (\n      <div className=\"current-user-main\">\n        <div className=\"user-profile\">\n          <div className=\"user-profile-box\" />\n          <h2 className=\"user-profile-header\">\n            Hello, {this.capitalize(this.props.currentUser.username)}\n          </h2>\n          <PostCompose\n            currentUser={this.props.currentUser}\n            newPost={this.props.newPost}\n            composePost={this.props.composePost}\n            history={this.props.history}\n          />\n          <ul className=\"profile-list\">{list}</ul>\n        </div>\n        <div className=\"current-user-join\">\n          <Join />\n        </div>\n      </div>\n    );\n  }\n\n  renderAsAnotherUser() {\n    if (this.props.users) {\n      const list = Object.values(this.props.posts[1]).map((post, idx) => (\n        <PostItem\n          key={idx}\n          post={post}\n          users={this.props.users}\n          fetchPosts={this.props.fetchPosts}\n          fetchUsers={this.props.fetchUsers}\n          history={this.props.history}\n          currentUser={this.props.currentUser}\n          removePost={this.props.removePost}\n          fetchPostComments={this.props.fetchPostComments}\n          composeComment={this.props.composeComment}\n          fetchComment={this.props.fetchComment}\n          removeComment={this.props.removeComment}\n          comments={this.props.comments}\n          fetchAllComments={this.props.fetchAllComments}\n        />\n      ));\n\n      return (\n        <div className=\"user-profile-content\">\n          <h2>\n            All of{\" \"}\n            <span className=\"user-profile-username\">\n              {this.props.users[this.props.user] ? this.props.users[this.props.user].username : null}\n            </span>\n            's Posts\n          </h2>\n          <ul className=\"posts\">{list}</ul>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    if (!this.state.user && this.state.posts.length === 0) {\n      return (\n        <div className=\"profile-main\">\n          <div className=\"profile-loading\">\n            <FontAwesomeIcon className=\"loading-icon\" icon={faSpinner} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"profile-main\">\n          <button\n            className=\"profile-button\"\n            onClick={() => this.props.history.push(\"/posts\")}\n          >\n            <FontAwesomeIcon\n              className=\"font-awesome-back\"\n              icon={faArrowCircleLeft}\n            />\n          </button>\n          {this.props.currentUser.id === this.props.user\n            ? this.renderCurrentUser()\n            : this.renderAsAnotherUser()}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}