{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/map/map.js\";\nimport React from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport FormWindow from \"./form\";\nimport * as MarkerApiUtil from \"../../util/marker_util\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { hashHistory } from 'react-router';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMapClick = (mapProps, map, clickEvent) => {\n      console.log(clickEvent.latLng); // if (this.state.showingInfoWindow) {\n      //   this.setState({\n      //     showingInfoWindow: false,\n      //     activeMarker: null,\n      //   });\n      //   return;\n      // }\n\n      const lat = clickEvent.latLng.lat();\n      const lng = clickEvent.latLng.lng();\n      console.log(lat, lng);\n      debugger;\n      this.props.history.push({\n        pathname: \"/form\",\n        state: {\n          latitude: lat,\n          longitude: lng\n        }\n      }); //  longitude: clickEvent.latLng.lng(),\n      // return (\n      // <FormWindow lat={40} lng={-70}/>\n      // )\n      // const newMarker = {\n      //   title: `New marker ${this.state.markers.length}`,\n      //   description: \"Can not be empty!\",\n      //   longitude: clickEvent.latLng.lng(),\n      //   latitude: clickEvent.latLng.lat(),\n      // };\n      // MarkerApiUtil.writeMarker(newMarker);\n      // const markers = [...this.state.markers, newMarker];\n      // this.setState({ markers });\n      // SAVE NEW MARK ${this.state.mark}`R\n      // POST http://api/marker (body: newMarker)\n      // MarkerUtil.add(newMarker ${this.state.mark}``\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        activeMarkerName: props.name,\n        activeMarkerTitle: props.title,\n        activeMarkerId: props.id,\n        activeMarkerRevision: props.revision,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onRenameClick = () => {\n      const markers = this.state.markers;\n      const marker = markers.find(o => o.id === this.state.activeMarkerId);\n\n      if (marker) {\n        marker.revision++;\n      }\n\n      this.setState({\n        markers\n      }, () => {\n        console.log(\"Markers after update\", this.state.markers);\n      });\n    };\n\n    this.state = {\n      markers: []\n    };\n  }\n\n  componentDidMount() {\n    // LOAD MARKERS\n    // GET http://api/marker\n    // MarkerUtil.getAll()\n    // .then(markers => {\n    // this.setState({ markers });\n    // });\n    MarkerApiUtil.getMarkers().then(markers => this.setState({\n      markers: Object.values(markers)[0]\n    })); //     //debugger;\n    // if (this.state.markers2.length !== 0) {\n    //     const markersNew = [...this.state.markers, this.state.markers2[0]];\n    //     this.setState({ markers: markersNew });\n    // }\n  }\n\n  render() {\n    debugger; // const style = {\n    //   width: \"100%\",\n    //   height: \"100%\",\n    // };\n\n    console.log(`${process.env.REACT_APP_GOOGLE_API_KEY}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"home-button\",\n      onClick: e => {\n        e.preventDefault();\n        this.props.history.push(\"/posts\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"home-icon\",\n      icon: faHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 4,\n      onClick: this.onMapClick,\n      initialCenter: {\n        lat: 40.7128,\n        lng: -74.006\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, this.state.markers.map((marker, index // {title: \"\", des: \"\", lat: , lng: }\n    ) =>\n    /*#__PURE__*/\n    React.createElement(Marker, {\n      key: index,\n      title: marker.title,\n      name: marker.description,\n      position: {\n        lat: marker.latitude,\n        lng: marker.longitude\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.state.activeMarkerTitle), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, this.state.activeMarkerName)))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`\n})(MapContainer);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/map/map.js"],"names":["React","GoogleApiWrapper","InfoWindow","Map","Marker","FormWindow","MarkerApiUtil","FontAwesomeIcon","faHome","hashHistory","MapContainer","Component","constructor","props","onMapClick","mapProps","map","clickEvent","console","log","latLng","lat","lng","history","push","pathname","state","latitude","longitude","onMarkerClick","marker","e","setState","activeMarkerName","name","activeMarkerTitle","title","activeMarkerId","id","activeMarkerRevision","revision","activeMarker","showingInfoWindow","onRenameClick","markers","find","o","componentDidMount","getMarkers","then","Object","values","render","process","env","REACT_APP_GOOGLE_API_KEY","preventDefault","google","index","description","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport FormWindow from \"./form\";\nimport * as MarkerApiUtil from \"../../util/marker_util\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { hashHistory } from 'react-router'\n\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markers: [],  \n    };\n  }\n\n\n  componentDidMount() {\n    // LOAD MARKERS\n    // GET http://api/marker\n    // MarkerUtil.getAll()\n    // .then(markers => {\n    // this.setState({ markers });\n    // });\n    MarkerApiUtil.getMarkers().then(markers => this.setState({markers: Object.values(markers)[0]}));\n    //     //debugger;\n    // if (this.state.markers2.length !== 0) {\n    //     const markersNew = [...this.state.markers, this.state.markers2[0]];\n\n    //     this.setState({ markers: markersNew });\n\n    // }\n  }\n\n  onMapClick = (mapProps, map, clickEvent) => {\n    console.log(clickEvent.latLng)\n    // if (this.state.showingInfoWindow) {\n    //   this.setState({\n    //     showingInfoWindow: false,\n    //     activeMarker: null,\n    //   });\n\n    //   return;\n    // }\n    const lat = clickEvent.latLng.lat();\n    const lng = clickEvent.latLng.lng();\n\n    console.log(lat, lng)\ndebugger\n    \n      this.props.history.push({\n      pathname: \"/form\",\n      state: { latitude: lat, longitude: lng},\n    });\n    //  longitude: clickEvent.latLng.lng(),\n\n    // return (\n\n    \n    // <FormWindow lat={40} lng={-70}/>\n    // )\n\n    // const newMarker = {\n    //   title: `New marker ${this.state.markers.length}`,\n    //   description: \"Can not be empty!\",\n    //   longitude: clickEvent.latLng.lng(),\n    //   latitude: clickEvent.latLng.lat(),\n    // };\n\n    // MarkerApiUtil.writeMarker(newMarker);\n\n    // const markers = [...this.state.markers, newMarker];\n\n    // this.setState({ markers });\n\n    // SAVE NEW MARK ${this.state.mark}`R\n    // POST http://api/marker (body: newMarker)\n    // MarkerUtil.add(newMarker ${this.state.mark}``\n  };\n\n\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      activeMarkerName: props.name,\n      activeMarkerTitle: props.title,\n      activeMarkerId: props.id,\n      activeMarkerRevision: props.revision,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onRenameClick = () => {\n    const markers = this.state.markers;\n\n    const marker = markers.find((o) => o.id === this.state.activeMarkerId);\n\n    if (marker) {\n      marker.revision++;\n    }\n\n    this.setState({ markers }, () => {\n      console.log(\"Markers after update\", this.state.markers);\n    });\n  };\n\n  render() {\ndebugger\n    // const style = {\n    //   width: \"100%\",\n    //   height: \"100%\",\n    // };\n    console.log(`${process.env.REACT_APP_GOOGLE_API_KEY}`);\n    return (\n        <div className=\"map-window\">         \n          <button\n            className=\"home-button\"\n            onClick={(e) => {\n              e.preventDefault();\n              this.props.history.push(\"/posts\");\n            }}\n          >\n            <FontAwesomeIcon className=\"home-icon\" icon={faHome} />\n          </button>\n\n          <Map\n            google={this.props.google}\n            zoom={4}\n            onClick={this.onMapClick}\n            initialCenter={{ lat: 40.7128, lng: -74.006 }}\n          >\n            {this.state.markers.map((\n              marker,\n              index // {title: \"\", des: \"\", lat: , lng: }\n            ) => (\n              <Marker\n                key={index}\n                title={marker.title}\n                name={marker.description}\n                position={{ lat: marker.latitude, lng: marker.longitude }}\n                onClick={this.onMarkerClick}\n              />\n            ))}\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n            >\n              <div>\n                <h1>{this.state.activeMarkerTitle}</h1>\n                <p>{this.state.activeMarkerName}</p>\n              </div>\n            </InfoWindow>\n          </Map>\n        </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`,\n})(MapContainer);\n\n\n\n"]},"metadata":{},"sourceType":"module"}