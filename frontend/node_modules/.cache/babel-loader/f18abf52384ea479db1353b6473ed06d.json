{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/session/login_form.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./session_form.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    debugger;\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  } // Once the user has been authenticated, redirect to the Tweets page\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/tweets');\n    } // Set or clear errors\n\n\n    this.setState({\n      errors: nextProps.errors\n    });\n  } // Handle field updates (called in the render method)\n\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  } // Handle form submission\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    debugger;\n    this.props.session(user);\n  } // Render the session errors if there are any\n\n\n  renderErrors() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, Object.keys(this.state.errors).map((error, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: `error-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, this.state.errors[error])));\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"session-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"session-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Welcome Back to Profferly!\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"session-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"session-form-field\",\n      value: this.state.email,\n      onChange: this.update('email'),\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"session-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"session-form-field\",\n      value: this.state.password,\n      onChange: this.update('password'),\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"session-button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), this.renderErrors())));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/session/login_form.js"],"names":["React","withRouter","LoginForm","Component","constructor","props","state","email","password","errors","handleSubmit","bind","renderErrors","componentWillReceiveProps","nextProps","currentUser","history","push","setState","update","field","e","currentTarget","value","preventDefault","user","session","Object","keys","map","error","i","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./session_form.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\ndebugger\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  // Once the user has been authenticated, redirect to the Tweets page\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/tweets');\n    }\n\n    // Set or clear errors\n    this.setState({errors: nextProps.errors})\n  }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  // Handle form submission\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n  debugger\n    \n    this.props.session(user); \n  }\n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\ndebugger\n    return (\n      <div className=\"session-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"session-form\">\n            <h3>Welcome Back to Profferly!</h3>\n              <label\n                className=\"session-form-label\">Email\n              <br/>\n              <input type=\"text\"\n                className=\"session-form-field\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n              </label>\n            \n              <label className=\"session-form-label\">Password\n              <br/>\n              <input type=\"password\"\n              className=\"session-form-field\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n              </label>\n  \n            <input \n              className=\"session-button\"\n              type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}