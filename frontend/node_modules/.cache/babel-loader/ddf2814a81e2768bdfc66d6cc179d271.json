{"ast":null,"code":"var _jsxFileName = \"/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/post_item.js\";\nimport React from 'react';\nimport Moment from \"react-moment\";\nimport './post.css';\nimport CommentsList from '../comments/comments_list';\nimport CommentForm from '../comments/comment_form';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\n\nclass PostItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.state = {\n      showComments: false,\n      commentDisplayText: \"Show Comments\"\n    };\n  }\n\n  handleClick() {\n    this.props.history.push(`/users/${this.props.post.user}`);\n  }\n\n  handleButton(e) {\n    e.preventDefault();\n    this.props.removePost(this.props.post._id);\n    this.props.history.go();\n  }\n\n  onClick() {\n    if (this.state.commentDisplayText === \"Show Comments\") {\n      this.setState(prevState => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Hide Comments\"\n      }));\n    } else {\n      this.setState(prevState => ({\n        showComments: !prevState.showComments,\n        commentDisplayText: \"Show Comments\"\n      }));\n    }\n  }\n\n  render() {\n    // debugger\n    const post = this.props.post;\n    const user = this.props.users[this.props.post.user]; //  const date = post.date; \n    //  let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    //  let localtime = post.date.toLocaleString(\"en-US\", options);\n    ////debugger\n\n    const dateStr = post.date.toString();\n\n    if (post.file && user) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"post-item-li\",\n        \"data-aos\": \"zoom-out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"post-item-image\",\n        src: post.file,\n        alt: \"uploaded by user to accompany post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-posted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }\n      }, \"Posted by\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"post-item-username\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }\n      }, user.username)), /*#__PURE__*/React.createElement(Moment, {\n        format: \"MMM DD, YYYY [at] h:mmA\",\n        className: \"post-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }\n      }, dateStr), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(LikesDislikes, {\n        postId: post._id,\n        userId: user._id,\n        currentUserId: this.props.currentUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }\n      }), this.props.currentUser.id === user._id ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"post-item-footer-button\",\n        onClick: this.handleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }\n      }, \"Delete\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }\n      })), /*#__PURE__*/React.createElement(CommentForm, {\n        currentUser: this.props.currentUser,\n        composeComment: this.props.composeComment,\n        currentPost: this.props.currentPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-hide-comments\",\n        onClick: () => this.onClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }\n      }, this.state.commentDisplayText), this.state.showComments ? /*#__PURE__*/React.createElement(CommentsList, {\n        currentPost: this.props.post,\n        comments: this.props.comments,\n        fetchPostComments: this.props.fetchPostComments // composeComment={this.props.composeComment}\n        ,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        isLoggedIn: this.props.isLoggedIn,\n        currentUser: this.props.currentUser,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }\n      }) : null));\n    } else if (!post.file && user) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"post-item-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-item-posted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Posted by\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"post-item-username\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 27\n        }\n      }, user.username)), /*#__PURE__*/React.createElement(Moment, {\n        format: \"MMM DD, YYYY [at] h:mmA\",\n        className: \"post-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, dateStr), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(LikesDislikes, {\n        postId: post._id,\n        userId: user._id,\n        currentUserId: this.props.currentUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }), this.props.currentUser.id === user._id ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"post-item-footer-button\",\n        onClick: this.handleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }\n      }, \"Delete\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(CommentForm, {\n        currentUser: this.props.currentUser,\n        composeComment: this.props.composeComment,\n        currentPost: this.props.currentPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-hide-comments\",\n        onClick: () => this.onClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }\n      }, this.state.commentDisplayText), this.state.showComments ? /*#__PURE__*/React.createElement(CommentsList, {\n        currentPost: this.props.post,\n        comments: this.props.comments,\n        fetchPostComments: this.props.fetchPostComments // composeComment={this.props.composeComment}\n        ,\n        fetchComment: this.props.fetchComment,\n        removeComment: this.props.removeComment,\n        isLoggedIn: this.props.isLoggedIn,\n        currentUser: this.props.currentUser,\n        fetchAllComments: this.props.fetchAllComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }) : null));\n    } else {\n      // ////debugger\n      return null;\n    }\n  }\n\n}\n\nexport default PostItem;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/posts/post_item.js"],"names":["React","Moment","CommentsList","CommentForm","LikesDislikes","PostItem","Component","constructor","props","handleClick","bind","handleButton","state","showComments","commentDisplayText","history","push","post","user","e","preventDefault","removePost","_id","go","onClick","setState","prevState","render","users","dateStr","date","toString","file","text","username","currentUser","id","composeComment","currentPost","comments","fetchPostComments","fetchComment","removeComment","isLoggedIn","fetchAllComments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Moment from \"react-moment\";\nimport './post.css';\nimport CommentsList from '../comments/comments_list';\nimport CommentForm from '../comments/comment_form';\nimport LikesDislikes from '../likesdislikes/likes_dislikes';\n\nclass PostItem extends React.Component {\n    constructor(props) {\n        super(props)\n        \n        this.handleClick = this.handleClick.bind(this);\n        this.handleButton = this.handleButton.bind(this);\n        this.state = { showComments: false, commentDisplayText: \"Show Comments\" }\n    }\n\n    handleClick() {\n        this.props.history.push(`/users/${this.props.post.user}` )\n    }\n    \n    handleButton(e) {\n        e.preventDefault();\n        this.props.removePost(this.props.post._id);\n        this.props.history.go();\n    }\n\n    onClick() {\n      if (this.state.commentDisplayText === \"Show Comments\") {\n        this.setState(prevState => ({ \n          showComments: !prevState.showComments, commentDisplayText: \"Hide Comments\" }));\n      } else {\n        this.setState(prevState => ({ \n          showComments: !prevState.showComments, commentDisplayText: \"Show Comments\" }));\n      }\n    }\n\n    render() {\n      // debugger\n             const post = this.props.post;\n             const user = this.props.users[this.props.post.user];\n\n            //  const date = post.date; \n            //  let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n            //  let localtime = post.date.toLocaleString(\"en-US\", options);\n             ////debugger\n             const dateStr = post.date.toString();\n             if (post.file && user) {\n                 return (\n                   <li className=\"post-item-li\" data-aos=\"zoom-out\">\n                     <div className=\"post-item\">\n                       <div>\n                         <img className=\"post-item-image\" src={post.file} alt=\"uploaded by user to accompany post\" />\n                       </div>\n                       <div className=\"post-item-text\">{post.text}</div>\n                       <div className=\"post-item-footer\">\n                         {/* <LikesDislikes postId={post._id} userId={user._id} currentUserId={this.props.currentUser.id}/> */}\n                         <div className=\"post-item-posted\">\n                           Posted by{\" \"}\n                           <span\n                             className=\"post-item-username\"\n                             onClick={this.handleClick}\n                           >\n                             {user.username}\n                           </span>\n                         </div>\n                         <Moment\n                           format=\"MMM DD, YYYY [at] h:mmA\"\n                           className=\"post-date\"\n                         >\n                           {dateStr}\n                         </Moment>\n                         <br />\n                         <LikesDislikes\n                           postId={post._id}\n                           userId={user._id}\n                           currentUserId={this.props.currentUser.id}\n                         />\n                         {/* <div className=\"post-date\">{localtime}</div> */}\n                         {this.props.currentUser.id === user._id ? (\n                           <button\n                             className=\"post-item-footer-button\"\n                             onClick={this.handleButton}\n                           >\n                             Delete\n                           </button>\n                         ) : (\n                           <div></div>\n                         )}\n                       </div>\n\n                       <CommentForm\n                         currentUser={this.props.currentUser}\n                         composeComment={this.props.composeComment}\n                         currentPost={this.props.currentPost}\n                       />\n                       <div\n                         className=\"show-hide-comments\"\n                         onClick={() => this.onClick()}\n                       >\n                         {this.state.commentDisplayText}\n                       </div>\n                       {this.state.showComments ? (\n                         <CommentsList\n                           currentPost={this.props.post}\n                           comments={this.props.comments}\n                           fetchPostComments={this.props.fetchPostComments}\n                           // composeComment={this.props.composeComment}\n                           fetchComment={this.props.fetchComment}\n                           removeComment={this.props.removeComment}\n                           isLoggedIn={this.props.isLoggedIn}\n                           currentUser={this.props.currentUser}\n                           fetchAllComments={this.props.fetchAllComments}\n                         />\n                       ) : null}\n\n                     </div>\n                   </li>\n                 );\n            } else if (!post.file && user) {\n                return (\n                  <li className=\"post-item-li\">\n                    <div className=\"post-item\">\n                      <div className=\"post-item-text\">{post.text}</div>\n                      <div className=\"post-item-footer\">\n                        {/* <LikesDislikes postId={post._id} userId={user._id} currentUserId={this.props.currentUser.id}/> */}\n                        <div className=\"post-item-posted\">\n                          Posted by{\" \"}\n                          <span\n                            className=\"post-item-username\"\n                            onClick={this.handleClick}\n                          >\n                            {user.username}\n                          </span>\n                        </div>\n                        <Moment\n                          format=\"MMM DD, YYYY [at] h:mmA\"\n                          className=\"post-date\"\n                        >\n                          {dateStr}\n                        </Moment>\n                        <br />\n                        <LikesDislikes\n                          postId={post._id}\n                          userId={user._id}\n                          currentUserId={this.props.currentUser.id}\n                        />\n                        {/* <div className=\"post-date\">{localtime}</div> */}\n                        {this.props.currentUser.id === user._id ? (\n                          <button\n                            className=\"post-item-footer-button\"\n                            onClick={this.handleButton}\n                          >\n                            Delete\n                          </button>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n\n                      <CommentForm\n                        currentUser={this.props.currentUser}\n                        composeComment={this.props.composeComment}\n                        currentPost={this.props.currentPost}\n                      />\n                      <div\n                        className=\"show-hide-comments\"\n                        onClick={() => this.onClick()}\n                      >\n                        {this.state.commentDisplayText}\n                      </div>\n                      {this.state.showComments ? (\n                        <CommentsList\n                          currentPost={this.props.post}\n                          comments={this.props.comments}\n                          fetchPostComments={this.props.fetchPostComments}\n                          // composeComment={this.props.composeComment}\n                          fetchComment={this.props.fetchComment}\n                          removeComment={this.props.removeComment}\n                          isLoggedIn={this.props.isLoggedIn}\n                          currentUser={this.props.currentUser}\n                          fetchAllComments={this.props.fetchAllComments}\n                        />\n                      ) : null}\n                    </div>\n                  </li>\n                );\n        } else {\n            // ////debugger\n            return null;\n        }\n    }\n}\n\nexport default PostItem;"]},"metadata":{},"sourceType":"module"}