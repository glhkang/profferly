{"ast":null,"code":"import _toConsumableArray from\"/Users/catherinekimyj/Desktop/profferly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/catherinekimyj/Desktop/profferly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{addRoomToRedux}from\"../../actions/session_actions\";import{fetchRoomMessages,newLocalMessage}from\"../../actions/message_action\";import queryString from\"query-string\";import io from\"socket.io-client\";import InfoBar from\"./bar\";import Input from\"./input\";import Messages from\"./messages\";import TextContainer from\"./text\";import\"./Chat.css\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSpinner}from\"@fortawesome/free-solid-svg-icons\";var socket;var Chat=function Chat(_ref){var location=_ref.location;var user=useSelector(function(state){return state.session.user;});var messages=useSelector(function(state){return state.messages.messages;});var loading=useSelector(function(state){return state.messages.loading;});var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var dispatch=useDispatch();var ENDPOINT=\"localhost:3000\";useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io();setRoom(room);setName(name);dispatch(addRoomToRedux(room));dispatch(fetchRoomMessages(room));socket.emit(\"join\",{name:name,room:room},function(error){if(error){alert(error);}});},[location.search]);useEffect(function(){socket.on(\"message\",function(message){if(message.user.toUpperCase()===user.username.toUpperCase()){return;}dispatch(newLocalMessage(message));});socket.on(\"roomData\",function(_ref2){var users=_ref2.users;var unique=_toConsumableArray(new Set(users.map(function(item){return item.name;})));setUsers(_toConsumableArray(unique));});},[]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit(\"sendMessage\",{message:message,room:room,user:user},function(){return setMessage(\"\");});dispatch(newLocalMessage({message:message,user:user.username,room:room,date:new Date().toISOString()}));}};if(loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"outerContainer\"},/*#__PURE__*/React.createElement(\"p\",{className:\"chat-loading\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"loading-icon\",icon:faSpinner})));};return/*#__PURE__*/React.createElement(\"div\",{className:\"outerContainer\"},/*#__PURE__*/React.createElement(TextContainer,{className:\"users-online\",users:users}),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(InfoBar,{room:room}),/*#__PURE__*/React.createElement(Messages,{messages:messages,name:name}),/*#__PURE__*/React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})));};export default Chat;","map":{"version":3,"sources":["/Users/catherinekimyj/Desktop/profferly/frontend/src/components/chat/chat.js"],"names":["React","useState","useEffect","useDispatch","useSelector","addRoomToRedux","fetchRoomMessages","newLocalMessage","queryString","io","InfoBar","Input","Messages","TextContainer","FontAwesomeIcon","faSpinner","socket","Chat","location","user","state","session","messages","loading","name","setName","room","setRoom","users","setUsers","message","setMessage","dispatch","ENDPOINT","parse","search","emit","error","alert","on","toUpperCase","username","unique","Set","map","item","sendMessage","event","preventDefault","date","Date","toISOString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addRoomToRedux } from \"../../actions/session_actions\";\nimport {\n  fetchRoomMessages,\n  newLocalMessage,\n} from \"../../actions/message_action\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"./bar\";\nimport Input from \"./input\";\nimport Messages from \"./messages\";\nimport TextContainer from \"./text\";\nimport \"./Chat.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nlet socket;\nconst Chat = ({ location }) => {\n  const user = useSelector((state) => state.session.user);\n  const messages = useSelector((state) => state.messages.messages);\n  const loading = useSelector((state) => state.messages.loading);\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const ENDPOINT = \"localhost:3000\";\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    socket = io();\n    setRoom(room);\n    setName(name);\n    dispatch(addRoomToRedux(room));\n    dispatch(fetchRoomMessages(room));\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]);\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      if (message.user.toUpperCase() === user.username.toUpperCase()) {\n        return;\n      }\n      dispatch(newLocalMessage(message));\n    });\n    socket.on(\"roomData\", ({ users }) => {\n      const unique = [...new Set(users.map((item) => item.name))];\n      setUsers([...unique]);\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", { message, room, user }, () => setMessage(\"\"));\n      dispatch(\n        newLocalMessage({\n          message,\n          user: user.username,\n          room,\n          date: new Date().toISOString(),\n        })\n      );\n    }\n  };\n  if (loading) {\n    return (\n      <div className=\"outerContainer\">\n        <p className=\"chat-loading\">\n          <FontAwesomeIcon className=\"loading-icon\" icon={faSpinner} />\n        </p>\n      </div>\n    )\n  };\n  return (\n    <div className=\"outerContainer\">\n      <TextContainer className=\"users-online\" users={users} />\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}